CG==================
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.content.Intent: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.content.Intent: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <java.lang.String: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.KeyEvent: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.MotionEvent: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.KeyEvent: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.location.Location: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.KeyEvent: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.content.Intent: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.content.Intent: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<android.app.Activity: void <clinit>()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<android.os.Bundle: void <clinit>()>   -->    <android.os.Bundle: void <clinit>()>
<android.os.Bundle: void <clinit>()>   -->    <android.os.Bundle: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.view.View: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<android.content.Intent: void <clinit>()>   -->    <android.content.Intent: void <clinit>()>
<java.lang.String: void <clinit>()>   -->    <java.lang.String: void <clinit>()>
<android.view.KeyEvent: void <clinit>()>   -->    <android.view.KeyEvent: void <clinit>()>
<android.view.MotionEvent: void <clinit>()>   -->    <android.view.MotionEvent: void <clinit>()>
<android.location.Location: void <clinit>()>   -->    <android.location.Location: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.TaxProductsActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.TaxProductsActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.service.RequestService: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.content.Intent: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.content.Intent: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$3: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$3: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.KeyEvent: void <init>(int,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.widget.ListView: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.SheduleConfirmationActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.SheduleConfirmationActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.widget.ListView: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.DiscountsCouponActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.DiscountsCouponActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.ScheduleActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.ScheduleActivity: android.app.Dialog onCreateDialog(int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.ScheduleActivity$1: void <init>(com.jacksonhewitt.mobile.ui.ScheduleActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.ScheduleActivity$1: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$2: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$2: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onBackPressed()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.ForgotPasswordActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.ForgotPasswordActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onResume()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onPause()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog$1: void <init>(android.app.Activity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog$1: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.widget.ListView: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.location.Location: void <init>(java.lang.String)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity$1: void <init>(com.jacksonhewitt.mobile.ui.locator.OfficeListActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity$1: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.widget.TextView: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.KeyEvent: void <init>(int,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.LoginActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.LoginActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog$1: void <init>(android.app.Activity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog$1: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.app.Dialog onCreateDialog(int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$5: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$5: boolean onTouch(android.view.View,android.view.MotionEvent)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.MotionEvent: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog$1: void <init>(android.app.Activity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog$1: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$4: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$4: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.KeyEvent: void <init>(int,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$6: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$6: void onFocusChange(android.view.View,boolean)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$8: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity,java.lang.String[])>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$8: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.widget.DatePicker: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: android.app.Dialog onCreateDialog(int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity$1: void <init>(com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity$1: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.widget.SeekBar: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onRestoreInstanceState(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onBackPressed()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onActivityResult(int,int,android.content.Intent)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onSaveInstanceState(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage$CaptureUploadButtonListener: void <init>(com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage,com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage$CaptureUploadButtonListener)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage$CaptureUploadButtonListener: void onClick(android.view.View)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.content.Intent: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onResume()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onActivityResult(int,int,android.content.Intent)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.content.Intent: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$1: void onClick(android.view.View)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$2: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$2: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$3: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$3: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.widget.SmartSeekBar$1: void <init>(com.jacksonhewitt.mobile.ui.widget.SmartSeekBar)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.widget.SmartSeekBar$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.widget.SeekBar: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.widget.SeekBar: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.widget.SeekBar: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.widget.TextView: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void <init>(com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity,android.widget.TextView)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void onClick(android.view.View)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.view.View: void <init>(android.content.Context)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: android.app.Dialog onCreateDialog(int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity$1: void <init>(com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity$1: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.TermsActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.TermsActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.HomeActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.HomeActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.HomeActivity: void onResume()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.HomeActivity: void onBackPressed()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: android.app.Dialog onCreateDialog(int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$2: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$2: void onClick(android.content.DialogInterface,int)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond)>
<dummyMainClass: void dummyMainMethod()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>
<com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>   -->    <com.flurry.android.FlurryAgent: void onStartSession(android.content.Context,java.lang.String)>
<com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>   -->    <com.flurry.android.FlurryAgent: void onEndSession(android.content.Context)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.utils.ValidationUtils: void <clinit>()>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.executor.HttpExecutor: com.jacksonhewitt.mobile.io.executor.HttpExecutor newInstance(int)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.utils.ValidationUtils: boolean isInternetAvailable(android.content.Context)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: android.widget.EditText access$1(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: android.widget.AutoCompleteTextView access$0(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$3: boolean onKey(android.view.View,int,android.view.KeyEvent)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$3: boolean onKey(android.view.View,int,android.view.KeyEvent)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: android.widget.EditText access$1(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$3: boolean onKey(android.view.View,int,android.view.KeyEvent)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: android.widget.AutoCompleteTextView access$0(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: android.widget.AutoCompleteTextView access$0(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: android.widget.AutoCompleteTextView access$0(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: android.widget.AutoCompleteTextView access$0(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStart()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStart()>   -->    <com.flurry.android.FlurryAgent: void onStartSession(android.content.Context,java.lang.String)>
<com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStop()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStop()>   -->    <com.flurry.android.FlurryAgent: void onEndSession(android.content.Context)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.content.Intent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void returnStatusPage()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.EstimatorState newInstance(android.content.Context)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxCalculator: com.jacksonhewitt.mobile.model.estimator.TaxCalculator newInstance(android.content.Context)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: com.jacksonhewitt.mobile.model.estimator.EstimatorState access$0(com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.content.Intent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: void showIfNetworkUnavailable(android.app.Activity)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.content.Intent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeMapActivity: void locateOffices(android.app.Activity,java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void selectOffice()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.content.Intent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <java.lang.Double: void <clinit>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <java.lang.Double: java.lang.String toString(double)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <java.lang.Double: java.lang.String toString(double)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <java.lang.Double: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog$1: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.ui.HomeActivity: void start(android.app.Activity)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity$1: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity$1: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void access$0(com.jacksonhewitt.mobile.ui.locator.OfficeListActivity)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.login.LoginActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: void showIfNetworkUnavailable(android.app.Activity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: void showIfNetworkUnavailable(android.app.Activity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.app.Dialog onCreateDialog(int)>   -->    <java.util.Calendar: java.util.Calendar getInstance()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$4: boolean onKey(android.view.View,int,android.view.KeyEvent)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$4: boolean onKey(android.view.View,int,android.view.KeyEvent)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.widget.EditText access$3(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$8: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$8: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void access$4(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity,java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.widget.EditText access$3(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.widget.AutoCompleteTextView access$2(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.widget.AutoCompleteTextView access$2(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.widget.AutoCompleteTextView access$2(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.widget.AutoCompleteTextView access$2(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.widget.AutoCompleteTextView access$2(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.widget.EditText access$1(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void access$0(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity,long)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.util.Calendar: java.util.Calendar getInstance()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.content.Intent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <java.lang.Integer: java.lang.String toString(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: android.widget.TextView access$0(com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.os.Environment: java.io.File getExternalStorageDirectory()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.utils.TaxYear: int CalculateCurrentTaxYear()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.utils.LoginUtils: java.lang.String getPortalId(android.content.Context)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.utils.LoginUtils: java.lang.String getUserName(android.content.Context)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <java.io.File: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onRestoreInstanceState(android.os.Bundle)>   -->    <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onActivityResult(int,int,android.content.Intent)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage$CaptureUploadButtonListener: void onClick(android.view.View)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage$CaptureUploadButtonListener: void onClick(android.view.View)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void access$0(com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.EstimatorState newInstance(android.content.Context)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxCalculator: com.jacksonhewitt.mobile.model.estimator.TaxCalculator newInstance(android.content.Context)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$1: void onClick(android.view.View)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$1: void onClick(android.view.View)>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void access$0(com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity,int)>
<com.jacksonhewitt.mobile.ui.widget.SmartSeekBar$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <android.view.View: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.SmartSeekBar$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: int access$0(com.jacksonhewitt.mobile.ui.widget.SmartSeekBar)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <java.lang.Integer: java.lang.String toString(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: android.widget.TextView access$2(com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <java.lang.Integer: java.lang.String toString(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: android.widget.TextView access$1(com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <java.lang.Integer: java.lang.String toString(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: android.widget.TextView access$0(com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void onClick(android.view.View)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void onClick(android.view.View)>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void access$0(com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity,java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.content.Intent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void access$0(com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity,boolean)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.utils.LoginUtils: void clearPortalId(android.content.Context)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.utils.LoginUtils: void clearGlobalId(android.content.Context)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onBackPressed()>   -->    <com.jacksonhewitt.mobile.utils.LoginUtils: void clearPortalId(android.content.Context)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onBackPressed()>   -->    <com.jacksonhewitt.mobile.utils.LoginUtils: void clearPassword(android.content.Context)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onBackPressed()>   -->    <com.jacksonhewitt.mobile.utils.LoginUtils: void clearUserName(android.content.Context)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onBackPressed()>   -->    <com.jacksonhewitt.mobile.utils.LoginUtils: void clearGlobalId(android.content.Context)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void <init>()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$2: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$2: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void access$2(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond,java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$2: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: java.lang.String[] access$1(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$2: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: java.lang.String access$0(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: android.widget.Button access$3(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void access$2(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond,java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: java.lang.String[] access$1(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: java.lang.String access$0(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <android.text.TextUtils: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <java.lang.String: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void onStartSession(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void onStartSession(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: int b(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.flurry.android.FlurryAgent: void onStartSession(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void onEndSession(android.content.Context)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void onEndSession(android.content.Context)>   -->    <com.flurry.android.ah: int b(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.flurry.android.FlurryAgent: void onEndSession(android.content.Context)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.jacksonhewitt.mobile.utils.ValidationUtils: void <clinit>()>   -->    <com.jacksonhewitt.mobile.utils.ValidationUtils: void <clinit>()>
<com.jacksonhewitt.mobile.utils.ValidationUtils: void <clinit>()>   -->    <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void returnStatusPage()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void returnStatusPage()>   -->    <com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: void showIfNetworkUnavailable(android.app.Activity)>   -->    <com.jacksonhewitt.mobile.utils.ValidationUtils: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: void showIfNetworkUnavailable(android.app.Activity)>   -->    <com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: android.app.AlertDialog create(android.app.Activity)>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: void showIfNetworkUnavailable(android.app.Activity)>   -->    <com.jacksonhewitt.mobile.utils.ValidationUtils: boolean isInternetAvailable(android.content.Context)>
<com.jacksonhewitt.mobile.ui.locator.OfficeMapActivity: void locateOffices(android.app.Activity,java.util.ArrayList,int)>   -->    <android.content.Intent: void <clinit>()>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void selectOffice()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void selectOffice()>   -->    <com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>
<java.lang.Double: void <clinit>()>   -->    <java.lang.Double: void <clinit>()>
<com.jacksonhewitt.mobile.ui.HomeActivity: void start(android.app.Activity)>   -->    <android.content.Intent: void <clinit>()>
<java.lang.Integer: void <clinit>()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.utils.TaxYear: int CalculateCurrentTaxYear()>   -->    <java.util.Calendar: java.util.Calendar getInstance()>
<com.jacksonhewitt.mobile.utils.LoginUtils: java.lang.String getPortalId(android.content.Context)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.utils.LoginUtils: java.lang.String getUserName(android.content.Context)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.utils.LoginUtils: void clearPortalId(android.content.Context)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: void setStringProperty(android.content.Context,int,java.lang.String)>
<com.jacksonhewitt.mobile.utils.LoginUtils: void clearGlobalId(android.content.Context)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: void setStringProperty(android.content.Context,int,java.lang.String)>
<com.jacksonhewitt.mobile.utils.LoginUtils: void clearPassword(android.content.Context)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: void setStringProperty(android.content.Context,int,java.lang.String)>
<com.jacksonhewitt.mobile.utils.LoginUtils: void clearUserName(android.content.Context)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: void setStringProperty(android.content.Context,int,java.lang.String)>
<android.text.TextUtils: void <clinit>()>   -->    <android.text.TextUtils: void <clinit>()>
<com.flurry.android.ah: int b(java.lang.String,java.lang.String,java.lang.Throwable)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.ah: int b(java.lang.String,java.lang.String,java.lang.Throwable)>   -->    <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.flurry.android.ah: int b(java.lang.String,java.lang.String,java.lang.Throwable)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.ah: void <clinit>()>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.ah: void <clinit>()>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>   -->    <com.flurry.android.ah: int b(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: android.content.SharedPreferences getPrefs(android.content.Context)>
<com.jacksonhewitt.mobile.utils.Prefs: void setStringProperty(android.content.Context,int,java.lang.String)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: android.content.SharedPreferences getPrefs(android.content.Context)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>
<com.jacksonhewitt.mobile.ui.FlurryActivity: void onStart()>   -->    <android.app.Activity: void onStart()>
<com.jacksonhewitt.mobile.ui.FlurryActivity: void onStop()>   -->    <android.app.Activity: void onStop()>
<android.os.Bundle: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.os.Bundle: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()>   -->    <java.lang.Object: void finalize()>
<com.jacksonhewitt.mobile.service.RequestService: void <init>()>   -->    <android.app.IntentService: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.service.RequestService: void sendResult(int,android.os.Bundle)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.service.RequestService: void sendResult(int,android.os.Bundle)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.service.RequestService: void sendResult(int,android.os.Bundle)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.service.RequestService: void sendError(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.ForgotPasswordResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.ForgotUserIdResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <java.lang.Throwable: java.lang.String getMessage()>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <java.net.URISyntaxException: java.lang.String getMessage()>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <org.xml.sax.SAXException: java.lang.String getMessage()>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<com.jacksonhewitt.mobile.service.RequestService: void onHandleIntent(android.content.Intent)>   -->    <java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<com.jacksonhewitt.mobile.service.RequestService: void sendError(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AuthResult: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.ForgotPasswordResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.ForgotPasswordResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.ForgotUserIdResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.ForgotUserIdResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.User: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.LoginResult: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.RegisterResult: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <java.security.KeyStore: java.lang.String getDefaultType()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.HttpVersion: void <clinit>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AppointmentResults: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.model.AuthResult: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AuthResult: void <clinit>()>
<org.json.JSONObject: void <clinit>()>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.model.User: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.User: void <clinit>()>
<com.jacksonhewitt.mobile.model.LoginResult: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.LoginResult: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.lang.String getSubstringByTwoChars(java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.lang.String getSubstringByTwoChars(java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Long: java.lang.Long valueOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Long: java.lang.Long valueOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.lang.String getSubstringByTwoChars(java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.lang.String getSubstringByTwoChars(java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.lang.String getSubstringByTwoChars(java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Long: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Long: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.Office: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office addDaysToOfficeInfo(com.jacksonhewitt.mobile.model.Office,org.xmlpull.v1.XmlPullParser)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOffice(org.xmlpull.v1.XmlPullParser)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <java.lang.Long: java.lang.Long valueOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.OfficeWorkingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <java.lang.Long: void <clinit>()>
<com.jacksonhewitt.mobile.model.RegisterResult: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.RegisterResult: void <clinit>()>
<org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>   -->    <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>
<org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>   -->    <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>
<org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>   -->    <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>
<org.apache.http.HttpVersion: void <clinit>()>   -->    <org.apache.http.HttpVersion: void <clinit>()>
<org.apache.http.HttpVersion: void <clinit>()>   -->    <org.apache.http.HttpVersion: void <clinit>()>
<org.apache.http.HttpVersion: void <clinit>()>   -->    <org.apache.http.HttpVersion: void <clinit>()>
<com.jacksonhewitt.mobile.model.AppointmentResults: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AppointmentResults: void <clinit>()>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <clinit>()>
<java.lang.Long: void <clinit>()>   -->    <java.lang.Long: void <clinit>()>
<com.jacksonhewitt.mobile.model.Office: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.Office: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOffice(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOffice(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOffice(org.xmlpull.v1.XmlPullParser)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.OfficeWorkingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.OfficeWorkingStatus: void <clinit>()>
<android.content.Intent: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.content.Intent: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.view.View: boolean requestFocus()>
<android.view.View: void <init>(android.content.Context)>   -->    <java.lang.Object: void <init>()>
<android.view.View: void <init>(android.content.Context)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$3: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$3: boolean onKey(android.view.View,int,android.view.KeyEvent)>   -->    <android.view.View: boolean requestFocus()>
<android.view.KeyEvent: void <init>(int,int)>   -->    <java.lang.Object: void <init>()>
<android.view.KeyEvent: void <init>(int,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.widget.EditText: android.text.Editable getText()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void onFocusChange(android.view.View,boolean)>   -->    <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryListActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.ListActivity: android.widget.ListView getListView()>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: android.os.Bundle getExtras()>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: long getLong(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.model.Office: int getOfficeId()>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <com.jacksonhewitt.mobile.utils.UiUtils: android.app.ProgressDialog newProgressDialog(android.content.Context,boolean,java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <java.lang.String: java.lang.String valueOf(long)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <java.lang.String: java.lang.String valueOf(int)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStart()>   -->    <android.app.Activity: void onStart()>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.widget.CheckedTextView: void setChecked(boolean)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.app.ListActivity: android.widget.ListView getListView()>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.widget.ListView: int getCheckedItemPosition()>
<com.jacksonhewitt.mobile.ui.FlurryListActivity: void onStop()>   -->    <android.app.Activity: void onStop()>
<android.widget.ListView: void <init>(android.content.Context)>   -->    <android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.ListView: void <init>(android.content.Context)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleConfirmationActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.SheduleConfirmationActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.SheduleConfirmationActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.SheduleConfirmationActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.SheduleConfirmationActivity: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: android.os.Bundle getExtras()>
<com.jacksonhewitt.mobile.ui.SheduleConfirmationActivity: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryListActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void setRefreshStatus(boolean)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.service.ReturnStatusApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.service.ReturnStatusApi: void getReturnStatus()>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: void getReturnStatus()>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: void getReturnStatus()>   -->    <com.jacksonhewitt.mobile.utils.TaxYear: int CalculateCurrentTaxYear()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <java.util.ArrayList: java.lang.Object get(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.app.Activity: void startActivity(android.content.Intent)>
<com.jacksonhewitt.mobile.ui.DiscountsCouponActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.DiscountsCouponActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.DiscountsCouponActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CalendarView: void setOnCellTouchListener(com.jacksonhewitt.mobile.ui.widget.CalendarView$OnCellTouchListener)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CalendarView: java.lang.String getMonthAndYearStr()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.widget.CalendarView: long getDateLong()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: android.os.Bundle getExtras()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.model.Office: int getOfficeId()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <com.jacksonhewitt.mobile.utils.UiUtils: android.app.ProgressDialog newProgressDialog(android.content.Context,boolean,java.lang.String)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.lang.String: java.lang.String valueOf(long)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.lang.String: java.lang.String valueOf(int)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.util.Calendar: java.util.Calendar getInstance()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: java.lang.String getMonthAndYearStr()>   -->    <com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: java.lang.String getMonthAndYearStr()>   -->    <java.lang.String: java.lang.String valueOf(int)>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: java.lang.String getMonthAndYearStr()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: java.lang.String getMonthAndYearStr()>   -->    <android.view.View: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: long getDateLong()>   -->    <java.util.Calendar: java.util.Calendar getInstance()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>   -->    <com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>   -->    <com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>   -->    <com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>   -->    <android.view.View: void <clinit>()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>   -->    <com.jacksonhewitt.mobile.ui.widget.CalendarView: void <clinit>()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: android.app.Dialog onCreateDialog(int)>   -->    <com.jacksonhewitt.mobile.ui.ScheduleActivity$1: void <init>(com.jacksonhewitt.mobile.ui.ScheduleActivity)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity$1: void <init>(com.jacksonhewitt.mobile.ui.ScheduleActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Dialog: void dismiss()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void setActionbarTitle(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.EstimatorState newInstance(android.content.Context)>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxCalculator: com.jacksonhewitt.mobile.model.estimator.TaxCalculator newInstance(android.content.Context)>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>   -->    <android.app.Activity: void onResume()>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void loadState()>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void loadState()>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void loadState()>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void configProgressBar()>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void loadState()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void loadState()>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void configProgressBar()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void configProgressBar()>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <java.lang.Math: int abs(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus[] values()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus[] values()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus[] values()>   -->    <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus[] values()>   -->    <java.lang.System: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus[] values()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <android.app.Activity: void onResume()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void configProgressBar()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void onResume()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: java.lang.String formatString(java.lang.String)>   -->    <java.util.Locale: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: java.lang.String formatString(java.lang.String)>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: java.lang.String formatString(java.lang.String)>   -->    <java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: java.lang.String formatString(java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void configProgressBar()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void configProgressBar()>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$2: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$2: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Dialog: void cancel()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAll()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void startActivity(android.content.Intent)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void finish()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAll()>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void changeTextBasedOnResult()>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onBackPressed()>   -->    <android.app.Activity: void setResult(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void onBackPressed()>   -->    <android.app.Activity: void finish()>
<com.jacksonhewitt.mobile.ui.login.ForgotPasswordActivity: void <init>()>   -->    <android.app.Activity: void <init>()>
<com.jacksonhewitt.mobile.ui.login.ForgotPasswordActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.login.ForgotPasswordActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.login.ForgotPasswordActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryListActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void configCalendarPicture()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onResume()>   -->    <android.app.Activity: void onResume()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onResume()>   -->    <android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onResume()>   -->    <android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <java.util.ArrayList: java.lang.Object get(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <java.util.ArrayList: java.lang.Object get(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.app.Activity: void startActivity(android.content.Intent)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <android.app.Activity: void startActivity(android.content.Intent)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>   -->    <com.jacksonhewitt.mobile.model.Office: int getOfficeId()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <android.location.Location: double getLatitude()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <android.location.Location: double getLongitude()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <com.jacksonhewitt.mobile.model.AddressQuery: void <init>(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <com.jacksonhewitt.mobile.service.LocatorApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <com.jacksonhewitt.mobile.service.LocatorApi: void getOffices(com.jacksonhewitt.mobile.model.AddressQuery)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onLocationChanged(android.location.Location)>   -->    <android.location.LocationManager: void removeUpdates(android.location.LocationListener)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onPause()>   -->    <android.app.Activity: void onPause()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void onPause()>   -->    <android.location.LocationManager: void removeUpdates(android.location.LocationListener)>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog$1: void <init>(android.app.Activity)>   -->    <java.lang.Object: void <init>()>
<android.location.Location: void <init>(java.lang.String)>   -->    <java.lang.Object: void <init>()>
<android.location.Location: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity$1: void <init>(com.jacksonhewitt.mobile.ui.locator.OfficeListActivity)>   -->    <java.lang.Object: void <init>()>
<android.widget.TextView: void <init>(android.content.Context)>   -->    <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.TextView: void <init>(android.content.Context)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void setActionbarTitle(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.LoginActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.login.LoginActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.login.LoginActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.login.LoginActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.login.LoginActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.LoginActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.LoginActivity: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void setDateTouchListener()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: android.os.Bundle getExtras()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.app.Dialog onCreateDialog(int)>   -->    <java.util.Calendar: int get(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.app.Dialog onCreateDialog(int)>   -->    <java.util.Calendar: int get(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.app.Dialog onCreateDialog(int)>   -->    <java.util.Calendar: int get(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.DatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$5: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$5: boolean onTouch(android.view.View,android.view.MotionEvent)>   -->    <android.app.Activity: void showDialog(int)>
<android.view.MotionEvent: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.view.MotionEvent: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$4: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$4: boolean onKey(android.view.View,int,android.view.KeyEvent)>   -->    <android.view.View: boolean requestFocus()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$6: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$6: void onFocusChange(android.view.View,boolean)>   -->    <android.app.Activity: void showDialog(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$8: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity,java.lang.String[])>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$8: void onClick(android.content.DialogInterface,int)>   -->    <android.app.AlertDialog: android.widget.ListView getListView()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$8: void onClick(android.content.DialogInterface,int)>   -->    <android.widget.ListView: int getCheckedItemPosition()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$8: void onClick(android.content.DialogInterface,int)>   -->    <java.lang.String: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   -->    <android.view.View: boolean requestFocus()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.widget.EditText: android.text.Editable getText()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void onFocusChange(android.view.View,boolean)>   -->    <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.util.Calendar: void setTimeZone(java.util.TimeZone)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.util.Calendar: void set(int,int,int,int,int,int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.util.Calendar: void set(int,int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.util.Calendar: long getTimeInMillis()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.DatePicker: void <init>(android.content.Context)>   -->    <android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.DatePicker: void <init>(android.content.Context)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: android.os.Bundle getExtras()>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity: android.app.Dialog onCreateDialog(int)>   -->    <com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity$1: void <init>(com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity$1: void <init>(com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Dialog: void cancel()>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void startActivity(android.content.Intent)>
<com.jacksonhewitt.mobile.ui.login.SecurityQuestionDialogActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void finish()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void setActionbarTitle(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<android.widget.SeekBar: void <init>(android.content.Context)>   -->    <android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.SeekBar: void <init>(android.content.Context)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void changeButtonTitle()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: int getLastImageId()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onHomeClick(android.view.View)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage$CaptureUploadButtonListener: void <init>(com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage,com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage$CaptureUploadButtonListener)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: android.os.Bundle getExtras()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.Object get(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <java.lang.StringBuilder: void <init>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <java.io.File: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <java.io.File: boolean mkdirs()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onCreate(android.os.Bundle)>   -->    <android.widget.Toast: void show()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: int getLastImageId()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: int getLastImageId()>   -->    <android.provider.MediaStore$Images$Media: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onHomeClick(android.view.View)>   -->    <android.content.Intent: void <clinit>()>
<android.provider.MediaStore$Images$Media: void <clinit>()>   -->    <android.provider.MediaStore$Images$Media: void <clinit>()>
<android.provider.MediaStore$Images$Media: void <clinit>()>   -->    <android.provider.MediaStore$Images$Media: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onRestoreInstanceState(android.os.Bundle)>   -->    <android.os.Bundle: boolean getBoolean(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onRestoreInstanceState(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>   -->    <android.graphics.Bitmap$CompressFormat: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>   -->    <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>   -->    <android.util.Base64: java.lang.String encodeToString(byte[],int)>
<android.graphics.Bitmap$CompressFormat: void <clinit>()>   -->    <android.graphics.Bitmap$CompressFormat: void <clinit>()>
<android.graphics.Bitmap$CompressFormat: void <clinit>()>   -->    <android.graphics.Bitmap$CompressFormat: void <clinit>()>
<android.graphics.Bitmap$CompressFormat: void <clinit>()>   -->    <android.graphics.Bitmap$CompressFormat: void <clinit>()>
<android.graphics.Bitmap$CompressFormat: void <clinit>()>   -->    <android.graphics.Bitmap$CompressFormat: void <clinit>()>
<android.graphics.Bitmap$CompressFormat: void <clinit>()>   -->    <android.graphics.Bitmap$CompressFormat: void <clinit>()>
<android.graphics.Bitmap$CompressFormat: void <clinit>()>   -->    <android.graphics.Bitmap$CompressFormat: void <clinit>()>
<android.graphics.Bitmap$CompressFormat: void <clinit>()>   -->    <android.graphics.Bitmap$CompressFormat: void <clinit>()>
<android.graphics.Bitmap$CompressFormat: void <clinit>()>   -->    <android.graphics.Bitmap$CompressFormat: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onBackPressed()>   -->    <android.app.Activity: void finish()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onActivityResult(int,int,android.content.Intent)>   -->    <android.content.Intent: android.os.Bundle getExtras()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onActivityResult(int,int,android.content.Intent)>   -->    <android.os.Bundle: java.lang.Object get(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onActivityResult(int,int,android.content.Intent)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onActivityResult(int,int,android.content.Intent)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onActivityResult(int,int,android.content.Intent)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onActivityResult(int,int,android.content.Intent)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onReturnFromThanksPage()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onActivityResult(int,int,android.content.Intent)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void changeButtonTitle()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onActivityResult(int,int,android.content.Intent)>   -->    <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <java.io.File: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <java.io.File: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <java.io.File: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <java.lang.Long: java.lang.String toString(long)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <java.lang.Long: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <android.provider.MediaStore$Images$Media: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <java.io.File: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onReturnFromThanksPage()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onSaveInstanceState(android.os.Bundle)>   -->    <android.os.Bundle: void putBoolean(java.lang.String,boolean)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage$CaptureUploadButtonListener: void <init>(com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage,com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage$CaptureUploadButtonListener)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage$CaptureUploadButtonListener: void <init>(com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void setActionbarTitle(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void init()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void <init>(android.content.Context)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void <init>(android.content.Context)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.EstimatorState newInstance(android.content.Context)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void configWidgets()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void checkFilingStatusPrefences()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void checkFilingStatusPrefences()>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void checkFilingStatusPrefences()>   -->    <com.jacksonhewitt.mobile.utils.Prefs: void setStringProperty(android.content.Context,int,java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void checkFilingStatusPrefences()>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void checkFilingStatusPrefences()>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onResume()>   -->    <android.app.Activity: void onResume()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onResume()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void configProgressBar()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void configProgressBar()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void configProgressBar()>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onActivityResult(int,int,android.content.Intent)>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity,int)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$2: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$2: void onClick(android.content.DialogInterface,int)>   -->    <android.os.Handler: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$2: void onClick(android.content.DialogInterface,int)>   -->    <android.os.Handler: boolean post(java.lang.Runnable)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$2: void onClick(android.content.DialogInterface,int)>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$2$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$2)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$3: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$3: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Dialog: void cancel()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void setActionbarTitle(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>
<com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void <init>(android.content.Context)>   -->    <android.widget.SeekBar: void <init>(android.content.Context)>
<com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void <init>(android.content.Context)>   -->    <com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void setOnClickListener()>
<com.jacksonhewitt.mobile.ui.widget.SmartSeekBar$1: void <init>(com.jacksonhewitt.mobile.ui.widget.SmartSeekBar)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.widget.SmartSeekBar$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <android.widget.ProgressBar: void setProgress(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <android.view.View: int getId()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void finish()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.Toast: void show()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.service.LocatorApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.service.LocatorApi: void getOfficeInfo(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.model.Office: int getOfficeId()>
<com.jacksonhewitt.mobile.service.LocatorApi: void getOfficeInfo(int)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.service.LocatorApi: void getOfficeInfo(int)>   -->    <java.lang.String: java.lang.String valueOf(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void <init>(com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity,android.widget.TextView)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void onClick(android.view.View)>   -->    <android.widget.TextView: java.lang.CharSequence getText()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void onClick(android.view.View)>   -->    <android.widget.EditText: java.lang.CharSequence getText()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void onClick(android.view.View)>   -->    <android.text.SpannableStringInternal: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void onClick(android.view.View)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void onClick(android.view.View)>   -->    <java.lang.StringBuffer: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void onClick(android.view.View)>   -->    <java.lang.String: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void onClick(android.view.View)>   -->    <java.lang.String: java.lang.String trim()>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void configWidgets()>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: android.app.Dialog onCreateDialog(int)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity: android.app.Dialog onCreateDialog(int)>   -->    <com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity$1: void <init>(com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity)>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity$1: void <init>(com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Dialog: void cancel()>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void startActivity(android.content.Intent)>
<com.jacksonhewitt.mobile.ui.login.ForgotUserIdActivity$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Activity: void finish()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void setActionbarTitle(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.TermsActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.TermsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.TermsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.TermsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.TermsActivity: void onCreate(android.os.Bundle)>   -->    <android.webkit.WebView: void setBackgroundColor(int)>
<com.jacksonhewitt.mobile.ui.TermsActivity: void onCreate(android.os.Bundle)>   -->    <android.view.View: void setBackgroundResource(int)>
<com.jacksonhewitt.mobile.ui.TermsActivity: void onCreate(android.os.Bundle)>   -->    <android.webkit.WebView: void loadUrl(java.lang.String)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: java.lang.String getAction()>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onCreate(android.os.Bundle)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onResume()>   -->    <android.app.Activity: void onResume()>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onResume()>   -->    <com.jacksonhewitt.mobile.ui.HomeActivity: void updateLogoutButtonVisibility()>
<com.jacksonhewitt.mobile.ui.HomeActivity: void updateLogoutButtonVisibility()>   -->    <com.jacksonhewitt.mobile.utils.LoginUtils: boolean isUserLoggedIn(android.content.Context)>
<com.jacksonhewitt.mobile.utils.LoginUtils: boolean isUserLoggedIn(android.content.Context)>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.utils.LoginUtils: boolean isUserLoggedIn(android.content.Context)>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.utils.LoginUtils: boolean isUserLoggedIn(android.content.Context)>   -->    <com.jacksonhewitt.mobile.utils.LoginUtils: java.lang.String getPortalId(android.content.Context)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void onBackPressed()>   -->    <android.app.Activity: void onBackPressed()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void findViews()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.service.ReturnStatusApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <java.lang.String: java.lang.String valueOf(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <java.lang.String: java.lang.String valueOf(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void initFields()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: android.os.Bundle getExtras()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void onCreate(android.os.Bundle)>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: android.app.Dialog onCreateDialog(int)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: android.app.Dialog onCreateDialog(int)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: android.app.Dialog onCreateDialog(int)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: android.app.Dialog onCreateDialog(int)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: android.app.Dialog onCreateDialog(int)>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$2: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$2: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond$1: void onClick(android.content.DialogInterface,int)>   -->    <android.app.Dialog: void cancel()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.FlurryAgent: void <init>()>
<com.flurry.android.FlurryAgent: void <clinit>()>   -->    <com.flurry.android.AppCircle: void <init>()>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <com.flurry.android.u: void <clinit>()>
<com.flurry.android.u: void <clinit>()>   -->    <com.flurry.android.u: void <clinit>()>
<com.flurry.android.u: void <clinit>()>   -->    <java.lang.System: long currentTimeMillis()>
<com.flurry.android.u: void <clinit>()>   -->    <com.flurry.android.u: void <clinit>()>
<com.flurry.android.u: void <clinit>()>   -->    <com.flurry.android.u: void <clinit>()>
<com.flurry.android.u: void <clinit>()>   -->    <com.flurry.android.u: void <clinit>()>
<com.flurry.android.u: void <clinit>()>   -->    <java.lang.System: void <clinit>()>
<com.flurry.android.u: void <clinit>()>   -->    <com.flurry.android.u: void <clinit>()>
<com.flurry.android.u: void <clinit>()>   -->    <com.flurry.android.u: void <clinit>()>
<com.flurry.android.u: void <clinit>()>   -->    <com.flurry.android.u: void <clinit>()>
<com.flurry.android.u: void <clinit>()>   -->    <com.flurry.android.u: void <clinit>()>
<com.flurry.android.FlurryAgent: void onStartSession(android.content.Context,java.lang.String)>   -->    <java.lang.NullPointerException: void <init>(java.lang.String)>
<com.flurry.android.FlurryAgent: void onStartSession(android.content.Context,java.lang.String)>   -->    <java.lang.String: int length()>
<com.flurry.android.FlurryAgent: void onStartSession(android.content.Context,java.lang.String)>   -->    <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.flurry.android.FlurryAgent: void onStartSession(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: java.lang.String c()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.Locale: java.util.Locale getDefault()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.Locale: java.util.Locale getDefault()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.TimeZone: java.util.TimeZone getDefault()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.System: long currentTimeMillis()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <android.os.SystemClock: long elapsedRealtime()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: int b(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: java.lang.String c(android.content.Context)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.Integer: java.lang.String toString(int,int)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: int d(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: int b(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.Locale: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.Locale: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.System: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.ah: int a(java.lang.String,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.ah: int a(java.lang.String,java.lang.String)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.flurry.android.ah: int a(java.lang.String,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: java.lang.String c()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: java.lang.String c()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: java.lang.String c()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.ah: int b(java.lang.String,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.ah: int b(java.lang.String,java.lang.String)>   -->    <android.util.Log: int e(java.lang.String,java.lang.String)>
<com.flurry.android.ah: int b(java.lang.String,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: java.lang.String c(android.content.Context)>   -->    <java.lang.Integer: void <clinit>()>
<com.flurry.android.FlurryAgent: java.lang.String c(android.content.Context)>   -->    <com.flurry.android.ah: int b(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.flurry.android.FlurryAgent: java.lang.String c(android.content.Context)>   -->    <java.lang.Integer: java.lang.String toString(int)>
<com.flurry.android.FlurryAgent: java.lang.String c(android.content.Context)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.ah: int d(java.lang.String,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.ah: int d(java.lang.String,java.lang.String)>   -->    <android.util.Log: int w(java.lang.String,java.lang.String)>
<com.flurry.android.ah: int d(java.lang.String,java.lang.String)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void onEndSession(android.content.Context)>   -->    <java.lang.NullPointerException: void <init>(java.lang.String)>
<com.flurry.android.FlurryAgent: void onEndSession(android.content.Context)>   -->    <com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <com.flurry.android.ah: int b(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <android.os.SystemClock: long elapsedRealtime()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <com.flurry.android.ah: int b(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <com.flurry.android.ah: int d(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <java.lang.IllegalArgumentException: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.LoginResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.ForgotUserIdResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.ForgotPasswordResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: com.jacksonhewitt.mobile.io.response.ResponseHandler newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutor: com.jacksonhewitt.mobile.io.executor.HttpExecutor newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: void <init>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutor: com.jacksonhewitt.mobile.io.executor.HttpExecutor newInstance(int)>   -->    <com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: void <init>()>
<com.jacksonhewitt.mobile.utils.ValidationUtils: boolean isInternetAvailable(android.content.Context)>   -->    <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.jacksonhewitt.mobile.utils.ValidationUtils: boolean isInternetAvailable(android.content.Context)>   -->    <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.jacksonhewitt.mobile.utils.ValidationUtils: boolean isInternetAvailable(android.content.Context)>   -->    <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.jacksonhewitt.mobile.utils.ValidationUtils: boolean isInternetAvailable(android.content.Context)>   -->    <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<com.jacksonhewitt.mobile.utils.ValidationUtils: boolean isInternetAvailable(android.content.Context)>   -->    <android.net.NetworkInfo: boolean isConnected()>
<com.jacksonhewitt.mobile.utils.ValidationUtils: boolean isInternetAvailable(android.content.Context)>   -->    <android.net.NetworkInfo: boolean isRoaming()>
<com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>   -->    <com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void <init>()>
<com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>   -->    <android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>
<com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void injectTo(android.widget.EditText)>   -->    <android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.EstimatorState newInstance(android.content.Context)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void <init>(android.content.Context)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: com.jacksonhewitt.mobile.model.estimator.TaxCalculator newInstance(android.content.Context)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void <init>(android.content.Context)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void <init>(android.content.Context)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.EstimatorState newInstance(android.content.Context)>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: void showIfNetworkUnavailable(android.app.Activity)>   -->    <android.app.Dialog: void show()>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: void showIfNetworkUnavailable(android.app.Activity)>   -->    <android.app.DatePickerDialog: void show()>
<com.jacksonhewitt.mobile.ui.locator.OfficeMapActivity: void locateOffices(android.app.Activity,java.util.ArrayList,int)>   -->    <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.locator.OfficeMapActivity: void locateOffices(android.app.Activity,java.util.ArrayList,int)>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeMapActivity: void locateOffices(android.app.Activity,java.util.ArrayList,int)>   -->    <android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>
<com.jacksonhewitt.mobile.ui.locator.OfficeMapActivity: void locateOffices(android.app.Activity,java.util.ArrayList,int)>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeMapActivity: void locateOffices(android.app.Activity,java.util.ArrayList,int)>   -->    <android.app.Activity: void startActivity(android.content.Intent)>
<android.util.Log: int d(java.lang.String,java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Double: java.lang.String toString(double)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void start(android.app.Activity)>   -->    <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void start(android.app.Activity)>   -->    <android.content.Intent: android.content.Intent setFlags(int)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void start(android.app.Activity)>   -->    <android.app.Activity: void startActivity(android.content.Intent)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void access$0(com.jacksonhewitt.mobile.ui.locator.OfficeListActivity)>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQuery getAddressQuery(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQuery getAddressQuery(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQuery parse(java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQuery parse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch defineTypeSearch(java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQuery parse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQuery parse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQuery parse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$AddressQueryBuilder$TypeSearch()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch defineTypeSearch(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch defineTypeSearch(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder: boolean isCityState(java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch defineTypeSearch(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder: boolean isZipCode(java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch defineTypeSearch(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch defineTypeSearch(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>   -->    <java.lang.String: java.lang.String copyValueOf(char[],int,int)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>   -->    <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>   -->    <java.lang.String: java.lang.String copyValueOf(char[],int,int)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$AddressQueryBuilder$TypeSearch()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$AddressQueryBuilder$TypeSearch()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch[] values()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$AddressQueryBuilder$TypeSearch()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$AddressQueryBuilder$TypeSearch()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$AddressQueryBuilder$TypeSearch()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch[] values()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch[] values()>   -->    <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch[] values()>   -->    <java.lang.System: void <clinit>()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch[] values()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void access$4(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity,java.lang.String)>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void setFilingStatusText(java.lang.String)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: java.lang.String toString(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.utils.TaxYear: int CalculateCurrentTaxYear()>   -->    <java.util.GregorianCalendar: void <init>()>
<com.jacksonhewitt.mobile.utils.TaxYear: int CalculateCurrentTaxYear()>   -->    <java.util.Calendar: void set(int,int,int)>
<com.jacksonhewitt.mobile.utils.TaxYear: int CalculateCurrentTaxYear()>   -->    <java.util.Calendar: int get(int)>
<com.jacksonhewitt.mobile.utils.TaxYear: int CalculateCurrentTaxYear()>   -->    <java.util.Calendar: boolean after(java.lang.Object)>
<com.jacksonhewitt.mobile.utils.TaxYear: int CalculateCurrentTaxYear()>   -->    <java.util.Calendar: int get(int)>
<com.jacksonhewitt.mobile.utils.TaxYear: int CalculateCurrentTaxYear()>   -->    <java.util.Calendar: int get(int)>
<java.lang.Integer: int parseInt(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.util.Log: int i(java.lang.String,java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void access$0(com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage)>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraOrUploadDocument()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraOrUploadDocument()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void access$0(com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity,int)>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <android.content.Intent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void totalCreditsPayments()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void deductions()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void adjustments()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void totalIncome()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void exemptions()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void filingStatus()>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void totalCreditsPayments()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void totalCreditsPayments()>   -->    <com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void deductions()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void deductions()>   -->    <com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void adjustments()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void adjustments()>   -->    <com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void totalIncome()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void totalIncome()>   -->    <com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void exemptions()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void exemptions()>   -->    <com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void filingStatus()>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.jacksonhewitt.mobile.utils.FlurryAgentEvents: void filingStatus()>   -->    <com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void access$0(com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity,java.lang.String)>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void call(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void call(java.lang.String)>   -->    <android.content.Intent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void call(java.lang.String)>   -->    <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void call(java.lang.String)>   -->    <android.net.Uri: void <clinit>()>
<android.net.Uri: void <clinit>()>   -->    <android.net.Uri: void <clinit>()>
<android.net.Uri: void <clinit>()>   -->    <android.net.Uri: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void access$0(com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity,boolean)>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>
<com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void logEvent(java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: boolean a(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: boolean a(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Collections: java.util.Map emptyMap()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: int a(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.r: java.lang.String a(java.lang.String,int)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <android.os.SystemClock: long elapsedRealtime()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: int b(java.lang.String,java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Collections: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.FlurryAgent: void <clinit>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.ah: void <clinit>()>
<com.flurry.android.ah: boolean a(java.lang.String)>   -->    <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: android.app.AlertDialog create(android.app.Activity)>   -->    <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: android.app.AlertDialog create(android.app.Activity)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: android.app.AlertDialog create(android.app.Activity)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: android.app.AlertDialog create(android.app.Activity)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: android.app.AlertDialog create(android.app.Activity)>   -->    <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog: android.app.AlertDialog create(android.app.Activity)>   -->    <com.jacksonhewitt.mobile.ui.widget.NoNetworkDialog$1: void <init>(android.app.Activity)>
<com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.utils.Prefs: void setStringProperty(android.content.Context,int,java.lang.String)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.utils.Prefs: android.content.SharedPreferences getPrefs(android.content.Context)>   -->    <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>   -->    <android.app.Activity: void <init>()>
<android.app.Activity: void onCreate(android.os.Bundle)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void setContentView(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.HashMap: void <init>()>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.TaxProductsActivity: void fillMapOfSites()>   -->    <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.app.Activity: void onStart()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void onStop()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)>   -->    <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void finalize()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.IntentService: void <init>(java.lang.String)>   -->    <android.app.Service: void <init>()>
<android.app.IntentService: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Service: void <init>()>   -->    <android.app.Service: void finalize()>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: int getIntExtra(java.lang.String,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void sendResult(int,android.os.Bundle)>   -->    <android.os.ResultReceiver: void send(int,android.os.Bundle)>
<android.content.Context: java.lang.String getString(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void sendError(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.service.RequestService: void sendError(java.lang.String)>   -->    <android.os.Bundle: void putString(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.service.RequestService: void sendError(java.lang.String)>   -->    <com.jacksonhewitt.mobile.service.RequestService: void sendResult(int,android.os.Bundle)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.entity.ByteArrayEntity: java.io.InputStream getContent()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.entity.StringEntity: java.io.InputStream getContent()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.io.InputStreamReader: void <init>(java.io.InputStream)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.io.BufferedReader: java.lang.String readLine()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void setEntity(org.apache.http.HttpEntity)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.entity.StringEntity: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.entity.ByteArrayEntity: java.io.InputStream getContent()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <org.apache.http.entity.StringEntity: java.io.InputStream getContent()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.io.InputStreamReader: void <init>(java.io.InputStream)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: java.lang.String execute(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.io.BufferedReader: java.lang.String readLine()>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: int intValue()>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AuthResult: void <init>(java.lang.String,int,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONArray: int length()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONArray: int length()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.RouteStep: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.utils.PolylineDecoder: java.util.ArrayList decodePoints(java.lang.String)>
<com.jacksonhewitt.mobile.model.RouteStep: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.RouteStep: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.ForgotPasswordResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.ForgotPasswordResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putBoolean(java.lang.String,boolean)>
<com.jacksonhewitt.mobile.io.response.ForgotPasswordResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ForgotPasswordResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ForgotPasswordResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.ForgotPasswordResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.ForgotUserIdResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.ForgotUserIdResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putBoolean(java.lang.String,boolean)>
<com.jacksonhewitt.mobile.io.response.ForgotUserIdResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ForgotUserIdResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ForgotUserIdResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.ForgotUserIdResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.User: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: int intValue()>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: int intValue()>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.LoginResult: void <init>(java.lang.String,int,int,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: int intValue()>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Integer: int intValue()>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.RegisterResult: void <init>(int,int,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONArray: int length()>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: void <clinit>()>
<com.jacksonhewitt.mobile.model.ReturnProduct: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void <init>()>
<com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <android.os.Bundle: void putBoolean(java.lang.String,boolean)>
<com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <org.json.JSONObject: boolean getBoolean(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: android.os.Bundle handleResponse(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<java.lang.Throwable: java.lang.String getMessage()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <java.security.KeyStore: void load(java.io.InputStream,char[])>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <com.jacksonhewitt.mobile.io.executor.TrustAllSSLSocketFactory: void <init>(java.security.KeyStore)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.params.BasicHttpParams: void <init>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.conn.scheme.SchemeRegistry: void <init>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: org.apache.http.impl.client.DefaultHttpClient newHttpClient()>   -->    <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.jacksonhewitt.mobile.io.executor.TrustAllSSLSocketFactory: void <init>(java.security.KeyStore)>   -->    <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>   -->    <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void finalize()>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <org.json.JSONObject: int getInt(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <java.lang.Integer: int intValue()>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AppointmentResults: void <init>(int,int,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: com.jacksonhewitt.mobile.model.AppointmentResults parseAppointmentResults(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.AuthResult: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AuthResult$1: void <init>()>
<com.jacksonhewitt.mobile.model.User: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.User$1: void <init>()>
<com.jacksonhewitt.mobile.model.LoginResult: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.LoginResult$1: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONArray: int length()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <org.json.JSONArray: java.lang.Object get(int)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.String: boolean contains(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.String: java.lang.String substring(int,int)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.String: java.lang.String substring(int,int)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Integer: int intValue()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Integer: int intValue()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Long: long longValue()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <java.lang.Long: long longValue()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.util.ArrayList parseAppointmentTimeslots(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: java.lang.String valueOf(long)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: java.lang.String valueOf(long)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.Office: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <java.lang.String: int length()>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <java.lang.String: java.lang.String substring(int,int)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <java.io.StringReader: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <org.xmlpull.v1.XmlPullParserException: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <java.lang.String: int length()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <java.lang.String: java.lang.String substring(int,int)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <java.io.StringReader: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: java.util.ArrayList parseOfficeList(java.lang.String)>   -->    <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <org.json.JSONObject: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <org.json.JSONObject: int getInt(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <org.json.JSONArray: int length()>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <org.json.JSONArray: java.lang.Object get(int)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <java.lang.String: int indexOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <java.lang.String: int indexOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <java.lang.String: java.lang.String substring(int,int)>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <java.lang.Long: long longValue()>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: java.util.ArrayList parseOfficeWorkingDays(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.OfficeWorkingStatus: void <init>(int,java.lang.String,long)>
<com.jacksonhewitt.mobile.model.RegisterResult: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.RegisterResult$1: void <init>()>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentResults: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AppointmentResults$1: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.lang.String getSubstringByTwoChars(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: int indexOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.lang.String getSubstringByTwoChars(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: int indexOf(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: java.lang.String getSubstringByTwoChars(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: java.lang.String substring(int,int)>
<java.lang.Long: java.lang.Long valueOf(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AppointmentTimeInterval$1: void <init>()>
<com.jacksonhewitt.mobile.model.Office: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.Office$1: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office addDaysToOfficeInfo(com.jacksonhewitt.mobile.model.Office,org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office addDaysToOfficeInfo(com.jacksonhewitt.mobile.model.Office,org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office addDaysToOfficeInfo(com.jacksonhewitt.mobile.model.Office,org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office addDaysToOfficeInfo(com.jacksonhewitt.mobile.model.Office,org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office addDaysToOfficeInfo(com.jacksonhewitt.mobile.model.Office,org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office addDaysToOfficeInfo(com.jacksonhewitt.mobile.model.Office,org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: com.jacksonhewitt.mobile.model.Office addDaysToOfficeInfo(com.jacksonhewitt.mobile.model.Office,org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void setDistance(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void setAddress(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void setCity(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void setState(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void setZip(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void setLatitude(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void setLongitude(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void setPhone(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOfficeInfo(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void setOfficeId(int)>
<com.jacksonhewitt.mobile.model.Office: void setDistance(java.lang.String)>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.model.Office: void setDistance(java.lang.String)>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.Office: void setDistance(java.lang.String)>   -->    <java.math.MathContext: void <clinit>()>
<com.jacksonhewitt.mobile.model.Office: void setDistance(java.lang.String)>   -->    <java.math.BigDecimal: void <clinit>()>
<android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOffice(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOffice(org.xmlpull.v1.XmlPullParser)>   -->    <com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOffice(org.xmlpull.v1.XmlPullParser)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOffice(org.xmlpull.v1.XmlPullParser)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOffice(org.xmlpull.v1.XmlPullParser)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: com.jacksonhewitt.mobile.model.Office parseOffice(org.xmlpull.v1.XmlPullParser)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.model.OfficeWorkingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.OfficeWorkingStatus$1: void <init>()>
<android.app.Activity: android.content.Intent getIntent()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <com.jacksonhewitt.mobile.ui.widget.PhoneTextWatcher: void <init>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.view.View: android.os.IBinder getWindowToken()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$1: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$2: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst$3: void <init>(com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivityFirst: void initFields()>   -->    <android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equals(java.lang.Object)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.TextView: void setText(java.lang.CharSequence)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.View: boolean requestFocus()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.EditText: android.text.Editable getText()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.FlurryListActivity: void <init>()>   -->    <android.app.ListActivity: void <init>()>
<android.app.Activity: android.view.View findViewById(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.ListActivity: android.widget.ListView getListView()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <com.jacksonhewitt.mobile.service.SheduleApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <com.jacksonhewitt.mobile.service.SheduleApi: void getOfficeAppointments(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <android.app.Dialog: void show()>
<com.jacksonhewitt.mobile.ui.SheduleTimeslotsActivity: void getAppointments(long,int)>   -->    <android.app.DatePickerDialog: void show()>
<android.content.Intent: android.os.Bundle getExtras()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.Bundle: java.lang.String getString(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.Bundle: long getLong(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.utils.UiUtils: android.app.ProgressDialog newProgressDialog(android.content.Context,boolean,java.lang.String)>   -->    <android.app.ProgressDialog: void <init>(android.content.Context)>
<com.jacksonhewitt.mobile.utils.UiUtils: android.app.ProgressDialog newProgressDialog(android.content.Context,boolean,java.lang.String)>   -->    <android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.utils.UiUtils: android.app.ProgressDialog newProgressDialog(android.content.Context,boolean,java.lang.String)>   -->    <android.app.Dialog: void setCancelable(boolean)>
<java.lang.String: java.lang.String valueOf(long)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String valueOf(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.View: android.view.View findViewById(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.CheckedTextView: void setChecked(boolean)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ListView: int getCheckedItemPosition()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void setRefreshStatus(boolean)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void setRefreshStatus(boolean)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void setRefreshStatus(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void setRefreshStatus(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void setRefreshStatus(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnListActivity: void setRefreshStatus(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.service.ApiHelper: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>   -->    <android.os.ResultReceiver: void <clinit>()>
<android.os.ResultReceiver: void <clinit>()>   -->    <android.os.ResultReceiver: void <clinit>()>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: void getReturnStatus()>   -->    <org.json.JSONObject: void <init>()>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: void getReturnStatus()>   -->    <org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: void getReturnStatus()>   -->    <org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: void getReturnStatus()>   -->    <org.json.JSONObject: java.lang.String toString()>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: void getReturnStatus()>   -->    <com.jacksonhewitt.mobile.service.ReturnStatusApi: int getGlobalId()>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: void getReturnStatus()>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void sendPost(int,java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: void getReturnStatus()>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: int getGlobalId()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: int getGlobalId()>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.service.ReturnStatusApi: int getGlobalId()>   -->    <com.jacksonhewitt.mobile.utils.LoginUtils: java.lang.String getGlobalId(android.content.Context)>
<com.jacksonhewitt.mobile.utils.LoginUtils: java.lang.String getGlobalId(android.content.Context)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>   -->    <java.lang.Object: void <init>()>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void startActivity(android.content.Intent)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <com.jacksonhewitt.mobile.ui.widget.PhoneTextWatcher: void <init>()>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.content.Intent: android.os.Bundle getExtras()>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.os.Bundle: long getLong(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.SheduleUserInfoActivity: void initFields()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.util.Calendar: void setTimeInMillis(long)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.util.Calendar: void set(int,int)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.util.Calendar: void set(int,int)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.util.Calendar: void set(int,int)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.util.Calendar: long getTimeInMillis()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <com.jacksonhewitt.mobile.service.SheduleApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <com.jacksonhewitt.mobile.service.SheduleApi: void getOfficeWorkingDays(java.lang.String)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <android.app.Dialog: void show()>
<com.jacksonhewitt.mobile.ui.ScheduleActivity: void getOfficeWorkingDays(long,int)>   -->    <android.app.DatePickerDialog: void show()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: java.lang.String getMonthAndYearStr()>   -->    <android.util.MonthDisplayHelper: int getMonth()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: java.lang.String getMonthAndYearStr()>   -->    <android.util.MonthDisplayHelper: int getYear()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: java.lang.String getMonthAndYearStr()>   -->    <java.lang.String: java.lang.String concat(java.lang.String)>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: java.lang.String getMonthAndYearStr()>   -->    <java.lang.String: java.lang.String concat(java.lang.String)>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: java.lang.String getMonthAndYearStr()>   -->    <java.lang.String: java.lang.String toUpperCase()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: long getDateLong()>   -->    <android.util.MonthDisplayHelper: int getYear()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: long getDateLong()>   -->    <android.util.MonthDisplayHelper: int getMonth()>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: long getDateLong()>   -->    <java.util.Calendar: void set(int,int,int)>
<com.jacksonhewitt.mobile.ui.widget.CalendarView: long getDateLong()>   -->    <java.util.Calendar: long getTimeInMillis()>
<android.app.AlertDialog$Builder: void <init>(android.content.Context)>   -->    <java.lang.Object: void <init>()>
<android.app.AlertDialog$Builder: void <init>(android.content.Context)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Dialog: void dismiss()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void <init>()>   -->    <com.jacksonhewitt.mobile.ui.FlurryActivity: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void setActionbarTitle(int)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void setActionbarTitle(int)>   -->    <android.widget.TextView: void setText(int)>
<android.app.Activity: void onResume()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateAdjustmentsActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void loadState()>   -->    <android.widget.ProgressBar: void setProgress(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateCreditsActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateDeductionsActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <android.widget.ProgressBar: void setProgress(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <android.widget.ProgressBar: void setProgress(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateExemptionsActivity: void loadState()>   -->    <android.widget.ProgressBar: void setProgress(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void hideCheckMarks()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.widget.ToggleButton: void setChecked(boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.widget.ToggleButton: void setChecked(boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.widget.ToggleButton: void setChecked(boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.widget.ToggleButton: void setChecked(boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.widget.ToggleButton: void setChecked(boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void loadState()>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void loadState()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void configProgressBar()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void configProgressBar()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.BaseEstimateActivity: void configProgressBar()>   -->    <com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void setProgressValue(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String formating(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setTextEstimatedRefound(android.widget.TextView,int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setTextEstimatedRefound(android.widget.TextView,int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String formating(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setTextEstimatedRefound(android.widget.TextView,int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setTextEstimatedRefound(android.widget.TextView,int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String formating(int)>   -->    <java.util.Locale: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String formating(int)>   -->    <java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <init>(java.lang.String,int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <init>(java.lang.String,int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <init>(java.lang.String,int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <init>(java.lang.String,int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <init>(java.lang.String,int,java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void configProgressBar()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void configProgressBar()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundResultsActivity: void configProgressBar()>   -->    <com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void setProgressValue(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<android.app.Dialog: void cancel()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setFilingStatus(com.jacksonhewitt.mobile.model.estimator.FilingStatus)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void reset()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAll()>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAll()>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAll()>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAll()>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcDeductions()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAll()>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcCredits()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAll()>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcTotal()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <java.lang.Integer: java.lang.String toString(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: void <clinit>()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void finish()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void changeTextBasedOnResult()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void changeTextBasedOnResult()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void changeTextBasedOnResult()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void changeTextBasedOnResult()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void changeTextBasedOnResult()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.ShareDocsThanksActivity: void changeTextBasedOnResult()>   -->    <android.widget.TextView: void setText(int)>
<android.app.Activity: void setResult(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void <init>()>   -->    <android.view.ContextThemeWrapper: void <init>()>
<android.app.Activity: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.app.Activity: android.content.Intent getIntent()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity$1: void <init>(com.jacksonhewitt.mobile.ui.locator.OfficeListActivity)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.widget.TextView: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void initViews()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void configCalendarPicture()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void configCalendarPicture()>   -->    <android.widget.ImageView: void setImageResource(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void configCalendarPicture()>   -->    <android.widget.ImageView: void setImageResource(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void configCalendarPicture()>   -->    <android.widget.ImageView: void setImageResource(int)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.TextView: void setText(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.location.Location: double getLatitude()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.location.Location: double getLongitude()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQuery: void <init>(java.lang.String,java.lang.String)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.service.LocatorApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.service.LocatorApi: void getOffices(com.jacksonhewitt.mobile.model.AddressQuery)>   -->    <com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String toString()>
<com.jacksonhewitt.mobile.service.LocatorApi: void getOffices(com.jacksonhewitt.mobile.model.AddressQuery)>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void sendGet(int,java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String toString()>   -->    <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String toString()>   -->    <com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String encode(java.lang.String)>
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void onPause()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <java.lang.Object: void <init>()>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void setDateTouchListener()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void setDateTouchListener()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$5: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void setDateTouchListener()>   -->    <android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void setDateTouchListener()>   -->    <android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void setDateTouchListener()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$6: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$2: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$3: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void configAutoCompliteTextView()>   -->    <com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity$4: void <init>(com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity)>
<android.app.DatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int)>   -->    <android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<android.app.DatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void showDialog(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.AlertDialog: android.widget.ListView getListView()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String toString()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void changeButtonTitle()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void changeButtonTitle()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: int getLastImageId()>   -->    <android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onHomeClick(android.view.View)>   -->    <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onHomeClick(android.view.View)>   -->    <android.content.Intent: android.content.Intent setFlags(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onHomeClick(android.view.View)>   -->    <android.app.Activity: void startActivity(android.content.Intent)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onHomeClick(android.view.View)>   -->    <android.app.Activity: void finish()>
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.Bundle: java.lang.Object get(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.Toast: void show()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.Bundle: boolean getBoolean(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void scaleImageToSend()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void changeButtonTitle()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>   -->    <android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>   -->    <java.io.ByteArrayOutputStream: void <init>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>   -->    <java.io.ByteArrayOutputStream: byte[] toByteArray()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>   -->    <android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onPhotoTaken()>   -->    <android.widget.Toast: void show()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void scaleImageToSend()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void scaleImageToSend()>   -->    <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void scaleImageToSend()>   -->    <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void scaleImageToSend()>   -->    <android.graphics.Bitmap: void <clinit>()>
<android.graphics.Bitmap: void <clinit>()>   -->    <android.graphics.Bitmap: void <clinit>()>
<android.graphics.Bitmap$CompressFormat: void <clinit>()>   -->    <android.graphics.Bitmap$CompressFormat: void <init>(java.lang.String,int)>
<android.graphics.Bitmap$CompressFormat: void <clinit>()>   -->    <android.graphics.Bitmap$CompressFormat: void <init>(java.lang.String,int)>
<android.util.Base64: java.lang.String encodeToString(byte[],int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: int getLastImageId()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String getLastImagePath()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <java.io.File: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <java.io.File: long length()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <java.io.File: boolean renameTo(java.io.File)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <java.io.File: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <java.io.File: long length()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <java.io.File: boolean delete()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void checkGalleryForLargerImage()>   -->    <java.io.File: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String getLastImagePath()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String getLastImagePath()>   -->    <android.provider.MediaStore$Images$Media: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: int getLastImageId()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <java.io.File: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <java.io.File: boolean delete()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <android.widget.Toast: void show()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void deleteTakenPictures()>   -->    <android.widget.Toast: void show()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onReturnFromThanksPage()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraOrUploadDocument()>
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Long: java.lang.String toString(long)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.Bundle: void putBoolean(java.lang.String,boolean)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage$CaptureUploadButtonListener: void <init>(com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void init()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateIncomeActivity: void init()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <android.widget.ListView: void setCacheColorHint(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <android.widget.ListView: void addHeaderView(android.view.View)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getDeductionsFlags()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getTaxCreditsFlags()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void findViews()>   -->    <com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[],java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void <init>(android.content.Context)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void configWidgets()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void configWidgets()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void configWidgets()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <java.lang.String: java.lang.String valueOf(int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: int getIntProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.utils.Prefs: int getIntProperty(android.content.Context,int)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: android.content.SharedPreferences getPrefs(android.content.Context)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void checkFilingStatusPrefences()>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View$OnClickListener)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.widget.AdapterView: void setOnClickListener(android.view.View$OnClickListener)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity,int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void init()>   -->    <android.view.ViewGroup: void addView(android.view.View)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void cleanGaugePanel()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void fillSections()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: java.lang.String formatString(java.lang.String)>   -->    <java.util.Locale: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: java.lang.String formatString(java.lang.String)>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: java.lang.String formatString(java.lang.String)>   -->    <java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: java.lang.String formatString(java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void configProgressBar()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void configProgressBar()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void configProgressBar()>   -->    <com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void setProgressValue(int)>
<android.os.Handler: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.os.Handler: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.Handler: boolean post(java.lang.Runnable)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$2$1: void <init>(com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity$2)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void setOnClickListener()>   -->    <com.jacksonhewitt.mobile.ui.widget.SmartSeekBar$1: void <init>(com.jacksonhewitt.mobile.ui.widget.SmartSeekBar)>
<com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void setOnClickListener()>   -->    <android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>
<android.widget.ProgressBar: void setProgress(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.View: int getId()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: java.lang.String getLocationZipCity()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void setPhoneStringFormat(android.widget.TextView)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void setOnClickListener(android.widget.TextView)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>   -->    <com.jacksonhewitt.mobile.model.Office: java.lang.String getAddress()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void fillWidgets()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void setPhoneStringFormat(android.widget.TextView)>   -->    <android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>
<com.jacksonhewitt.mobile.service.LocatorApi: void getOfficeInfo(int)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.service.LocatorApi: void getOfficeInfo(int)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.service.LocatorApi: void getOfficeInfo(int)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.service.LocatorApi: void getOfficeInfo(int)>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void sendGet(int,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.TextView: java.lang.CharSequence getText()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.EditText: java.lang.CharSequence getText()>   -->    <android.widget.EditText: android.text.Editable getText()>
<android.text.SpannableStringInternal: java.lang.String toString()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.StringBuffer: java.lang.String toString()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String trim()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void configWidgets()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void configWidgets()>   -->    <com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void configWidgets()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void configWidgets()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: int getIntProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.utils.Prefs: java.lang.String getStringProperty(android.content.Context,int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void setStatuses(boolean)>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.webkit.WebView: void setBackgroundColor(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.View: void setBackgroundResource(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.webkit.WebView: void loadUrl(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: java.lang.String getAction()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void updateLogoutButtonVisibility()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.HomeActivity: void updateLogoutButtonVisibility()>   -->    <android.view.View: void setVisibility(int)>
<android.app.Activity: void onBackPressed()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void findViews()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void findViews()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void findViews()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void findViews()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void findViews()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: java.lang.String getLabel()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: java.lang.String getReturnStatus()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: double getRefundAmount()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: double getBalanceDue()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: java.lang.String getRefundStatus()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: java.lang.String formatString(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: void fillViews(com.jacksonhewitt.mobile.model.ReturnProduct)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: java.lang.String formatString(java.lang.String)>   -->    <java.util.Locale: void <clinit>()>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: java.lang.String formatString(java.lang.String)>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: java.lang.String formatString(java.lang.String)>   -->    <java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>
<com.jacksonhewitt.mobile.ui.refunds.ReturnDetailsActivity: java.lang.String formatString(java.lang.String)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void initFields()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.login.RegisterActivitySecond: void initFields()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <java.util.WeakHashMap: void <init>()>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <java.util.ArrayList: void <init>()>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <java.util.ArrayList: void <init>()>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <java.util.ArrayList: void <init>()>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <java.util.HashMap: void <init>()>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <com.flurry.android.u: void <init>()>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <android.os.HandlerThread: void <init>(java.lang.String)>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <java.lang.Thread: void start()>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <android.os.HandlerThread: void run()>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <android.os.HandlerThread: android.os.Looper getLooper()>
<com.flurry.android.FlurryAgent: void <init>()>   -->    <android.os.Handler: void <init>(android.os.Looper)>
<com.flurry.android.AppCircle: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.flurry.android.u: void <clinit>()>   -->    <java.util.Random: void <init>(long)>
<java.lang.NullPointerException: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>()>
<java.lang.NullPointerException: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int length()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.lang.String: int hashCode()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent$FlurryDefaultExceptionHandler: void <init>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.Locale: java.lang.String getLanguage()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.Locale: java.lang.String getCountry()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.HashMap: void <init>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.ArrayList: void <init>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.ArrayList: void <init>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.u: boolean a()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.u: void a(long,long)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.a: void <init>()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.d: void <init>(com.flurry.android.FlurryAgent,android.content.Context,boolean)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <com.flurry.android.FlurryAgent: void a(java.lang.Runnable)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.Vector: boolean isEmpty()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.ArrayList: boolean isEmpty()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.List: java.lang.Object remove(int)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.Vector: java.lang.Object remove(int)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.ArrayList: java.lang.Object remove(int)>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.List: int size()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.Vector: int size()>
<com.flurry.android.FlurryAgent: void b(android.content.Context,java.lang.String)>   -->    <java.util.ArrayList: int size()>
<com.flurry.android.FlurryAgent$FlurryDefaultExceptionHandler: void <init>()>   -->    <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <com.flurry.android.u: void <clinit>()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <android.net.Uri: void <clinit>()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <android.content.Intent: void <clinit>()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <com.flurry.android.u: void <clinit>()>
<com.flurry.android.FlurryAgent: java.lang.String c(android.content.Context)>   -->    <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.flurry.android.FlurryAgent: java.lang.String c(android.content.Context)>   -->    <android.content.ContextWrapper: java.lang.String getPackageName()>
<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: java.lang.String toString(int,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.util.Log: int e(java.lang.String,java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.util.Log: int w(java.lang.String,java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.util.Map: java.lang.Object remove(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.util.TreeMap: java.lang.Object remove(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.util.Map: boolean isEmpty()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.util.WeakHashMap: boolean isEmpty()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.util.Hashtable: boolean isEmpty()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.util.AbstractMap: boolean isEmpty()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.util.HashMap: boolean isEmpty()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <com.flurry.android.FlurryAgent: void m()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <com.flurry.android.FlurryAgent: void a(java.lang.Runnable)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.lang.String: boolean equals(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <com.flurry.android.b: void <init>(com.flurry.android.FlurryAgent,boolean,android.content.Context)>
<com.flurry.android.FlurryAgent: void a(android.content.Context,boolean)>   -->    <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.jacksonhewitt.mobile.io.response.OfficeListResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeInfoResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeWorkingDaysResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.OfficeAppointmentsResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.LoginResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.RegisterResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ForgotUserIdResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ForgotPasswordResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.AuthentificateResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.GetUserResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.AppointmentResultsResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.response.ShareDocsResponseHandler: void <init>()>   -->    <com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorGet: void <init>()>   -->    <com.jacksonhewitt.mobile.io.executor.HttpExecutor: void <init>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutorPost: void <init>()>   -->    <com.jacksonhewitt.mobile.io.executor.HttpExecutor: void <init>()>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.net.NetworkInfo: boolean isConnected()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.net.NetworkInfo: boolean isRoaming()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.widget.CurrencyTextWatcher: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void <init>(android.content.Context)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void <init>(android.content.Context)>   -->    <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void <init>(android.content.Context)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void <init>(android.content.Context)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void <init>(android.content.Context)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void <init>(android.content.Context)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void <init>(android.content.Context)>   -->    <java.lang.Object: void <init>()>
<android.app.Dialog: void show()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.DatePickerDialog: void show()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: android.content.Intent setFlags(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.widget.TextView: java.lang.CharSequence getText()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.widget.EditText: java.lang.CharSequence getText()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.widget.TextView: void setText(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <java.lang.CharSequence: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.text.SpannableStringInternal: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <java.lang.StringBuffer: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <java.lang.String: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <java.lang.String: java.lang.String trim()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.widget.Toast: void show()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void hideKeyboard()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <android.widget.ProgressBar: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <com.jacksonhewitt.mobile.ui.adapter.OfficeListAdapter: void <init>(android.content.Context,java.util.List)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <com.jacksonhewitt.mobile.service.LocatorApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void searchOfficesByLocation()>   -->    <com.jacksonhewitt.mobile.service.LocatorApi: void getOffices(com.jacksonhewitt.mobile.model.AddressQuery)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQuery parse(java.lang.String)>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQuery parse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQuery: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQuery parse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQuery: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: com.jacksonhewitt.mobile.model.AddressQuery parse(java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AddressQuery: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>   -->    <java.lang.String: int indexOf(java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>   -->    <java.lang.String: int length()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>   -->    <java.lang.String: char[] toCharArray()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: java.lang.String getPartText(boolean,java.lang.String)>   -->    <java.lang.String: char[] toCharArray()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$AddressQueryBuilder$TypeSearch()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$AddressQueryBuilder$TypeSearch()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$AddressQueryBuilder$TypeSearch()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <init>(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <init>(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <init>(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: boolean isCityState(java.lang.String)>   -->    <java.lang.String: boolean matches(java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: boolean isZipCode(java.lang.String)>   -->    <java.lang.String: boolean matches(java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder: boolean isZipCode(java.lang.String)>   -->    <java.lang.String: int length()>
<java.lang.String: java.lang.String copyValueOf(char[],int,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void setFilingStatusText(java.lang.String)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.refunds.AuthenticationActivity: void setFilingStatusText(java.lang.String)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraOrUploadDocument()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String buildPath()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraOrUploadDocument()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraOrUploadDocument()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String buildPath()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String buildPath()>   -->    <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String buildPath()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <java.io.File: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <android.net.Uri: android.net.Uri fromFile(java.io.File)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <android.content.Intent: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <android.net.Uri: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <android.app.Activity: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <org.json.JSONObject: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <com.jacksonhewitt.mobile.utils.UiUtils: android.app.ProgressDialog newProgressDialog(android.content.Context,boolean,java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <android.content.Intent: void <init>()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void onItemClick(int)>   -->    <android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void call(java.lang.String)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void call(java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void call(java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void call(java.lang.String)>   -->    <android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void call(java.lang.String)>   -->    <android.app.Activity: void startActivity(android.content.Intent)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.lang.String: int length()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Map: java.lang.Object get(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Map: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.WeakHashMap: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Hashtable: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.TreeMap: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.HashMap: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Map: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.WeakHashMap: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Hashtable: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.TreeMap: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.HashMap: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Map: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.WeakHashMap: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Hashtable: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.TreeMap: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.HashMap: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.g: void <init>()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.List: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Vector: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.ArrayList: int size()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.List: boolean add(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.Vector: boolean add(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.i: void <init>(java.lang.String,java.util.Map,long,boolean)>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.i: byte[] a()>
<com.flurry.android.FlurryAgent: void a(java.lang.String,java.util.Map,boolean)>   -->    <com.flurry.android.i: byte[] a()>
<com.flurry.android.i: byte[] a()>   -->    <com.flurry.android.r: void a(java.io.Closeable)>
<com.flurry.android.i: byte[] a()>   -->    <com.flurry.android.r: void a(java.io.Closeable)>
<com.flurry.android.i: byte[] a()>   -->    <com.flurry.android.r: void a(java.io.Closeable)>
<com.flurry.android.i: byte[] a()>   -->    <com.flurry.android.r: java.lang.String a(java.lang.String,int)>
<com.flurry.android.i: byte[] a()>   -->    <com.flurry.android.r: java.lang.String a(java.lang.String,int)>
<com.flurry.android.r: java.lang.String a(java.lang.String,int)>   -->    <java.lang.String: int length()>
<com.flurry.android.r: java.lang.String a(java.lang.String,int)>   -->    <java.lang.String: java.lang.String substring(int,int)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Service: void <init>()>   -->    <android.content.ContextWrapper: void <init>(android.content.Context)>
<android.app.Service: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Service: void finalize()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.ResultReceiver: void send(int,android.os.Bundle)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.Bundle: void putString(java.lang.String,java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.impl.client.DefaultHttpClient: void <init>()>   -->    <org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
<org.apache.http.impl.client.DefaultHttpClient: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>   -->    <org.apache.http.client.methods.HttpRequestBase: void <init>()>
<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.entity.ByteArrayEntity: java.io.InputStream getContent()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.entity.StringEntity: java.io.InputStream getContent()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>   -->    <org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()>
<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void setEntity(org.apache.http.HttpEntity)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.entity.StringEntity: void <init>(java.lang.String)>   -->    <org.apache.http.entity.AbstractHttpEntity: void <init>()>
<org.apache.http.entity.StringEntity: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void printStackTrace()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: void <init>(java.lang.String)>   -->    <java.lang.Object: void <init>()>
<org.json.JSONObject: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: int intValue()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.AuthResult: void <init>(java.lang.String,int,java.lang.String)>   -->    <java.lang.Object: void <init>()>
<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONArray: int length()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.RouteStep: void <init>()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.RouteStep: void setDistance(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.RouteStep: void setDuration(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.RouteStep: void setHtmlInstructions(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.RouteStep: void setPoints(java.util.ArrayList)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.DirectionsResponseHandler: com.jacksonhewitt.mobile.model.RouteStep readStep(org.json.JSONObject)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.model.RouteStep: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.RouteStep$1: void <init>()>
<com.jacksonhewitt.mobile.utils.PolylineDecoder: java.util.ArrayList decodePoints(java.lang.String)>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.utils.PolylineDecoder: java.util.ArrayList decodePoints(java.lang.String)>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.utils.PolylineDecoder: java.util.ArrayList decodePoints(java.lang.String)>   -->    <java.lang.String: int length()>
<com.jacksonhewitt.mobile.utils.PolylineDecoder: java.util.ArrayList decodePoints(java.lang.String)>   -->    <java.lang.String: char charAt(int)>
<com.jacksonhewitt.mobile.utils.PolylineDecoder: java.util.ArrayList decodePoints(java.lang.String)>   -->    <java.lang.String: char charAt(int)>
<com.jacksonhewitt.mobile.utils.PolylineDecoder: java.util.ArrayList decodePoints(java.lang.String)>   -->    <com.google.android.maps.GeoPoint: void <init>(int,int)>
<com.jacksonhewitt.mobile.utils.PolylineDecoder: java.util.ArrayList decodePoints(java.lang.String)>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.utils.PolylineDecoder: java.util.ArrayList decodePoints(java.lang.String)>   -->    <org.xmlpull.v1.XmlPullParserException: void printStackTrace()>
<com.jacksonhewitt.mobile.model.User: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.Object: void <init>()>
<org.json.JSONObject: java.lang.String toString()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.LoginResult: void <init>(java.lang.String,int,int,java.lang.String)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.RegisterResult: void <init>(int,int,java.lang.String)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: void <init>()>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: void setLabel(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: void setReturnStatus(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: void setRefundAmount(double)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: void setBalanceDue(double)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct: void setRefundStatus(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <org.json.JSONObject: double getDouble(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <org.json.JSONObject: double getDouble(java.lang.String)>
<com.jacksonhewitt.mobile.io.response.ReturnStatusResponseHandler: com.jacksonhewitt.mobile.model.ReturnProduct readProduct(org.json.JSONObject)>   -->    <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.jacksonhewitt.mobile.model.ReturnProduct: void <clinit>()>   -->    <com.jacksonhewitt.mobile.model.ReturnProduct$1: void <init>()>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.TrustAllSSLSocketFactory: void <init>(java.security.KeyStore)>   -->    <org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
<com.jacksonhewitt.mobile.io.executor.TrustAllSSLSocketFactory: void <init>(java.security.KeyStore)>   -->    <com.jacksonhewitt.mobile.io.executor.TrustAllSSLSocketFactory$1: void <init>(com.jacksonhewitt.mobile.io.executor.TrustAllSSLSocketFactory)>
<com.jacksonhewitt.mobile.io.executor.TrustAllSSLSocketFactory: void <init>(java.security.KeyStore)>   -->    <javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>
<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.params.BasicHttpParams: void <init>()>   -->    <org.apache.http.params.AbstractHttpParams: void <init>()>
<org.apache.http.params.BasicHttpParams: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>   -->    <java.lang.Object: void <init>()>
<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>   -->    <java.lang.Object: void <init>()>
<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>   -->    <java.lang.Object: void <init>()>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>   -->    <org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void finalize()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: int getInt(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentResults: void <init>(int,int,java.lang.String)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.AuthResult$1: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.User$1: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.LoginResult$1: void <init>()>   -->    <java.lang.Object: void <init>()>
<org.json.JSONArray: java.lang.Object get(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean contains(java.lang.CharSequence)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Long: long longValue()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void setStartTime(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void setEndTime(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: java.lang.String concat(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: void <init>(long,long,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.String: java.lang.String concat(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.lang.String: java.lang.String valueOf(int)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.lang.String: java.lang.String valueOf(int)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.util.Calendar: java.util.Calendar getInstance()>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.model.Office: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.Office: void <init>()>   -->    <java.util.LinkedHashMap: void <init>()>
<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>   -->    <java.lang.Exception: void <init>()>
<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int indexOf(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.OfficeWorkingStatus: void <init>(int,java.lang.String,long)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.RegisterResult$1: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.AppointmentResults$1: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval$1: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.Office$1: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>   -->    <java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>   -->    <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>   -->    <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>   -->    <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.model.Office: void addDay(java.lang.String,java.lang.String)>   -->    <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.model.Office: void setDistance(java.lang.String)>   -->    <java.math.BigDecimal: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: void setDistance(java.lang.String)>   -->    <java.math.BigDecimal: java.math.BigDecimal round(java.math.MathContext)>
<com.jacksonhewitt.mobile.model.Office: void setDistance(java.lang.String)>   -->    <java.math.BigDecimal: java.lang.String toPlainString()>
<com.jacksonhewitt.mobile.model.Office: void setDistance(java.lang.String)>   -->    <java.math.MathContext: void <init>(int)>
<com.jacksonhewitt.mobile.model.Office: void setAddress(java.lang.String)>   -->    <java.lang.String: java.lang.String trim()>
<com.jacksonhewitt.mobile.model.Office: void setCity(java.lang.String)>   -->    <java.lang.String: java.lang.String trim()>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.Office: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.model.OfficeWorkingStatus$1: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.ui.widget.PhoneTextWatcher: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.view.View: android.os.IBinder getWindowToken()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>   -->    <android.widget.BaseAdapter: void <init>()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.TextView: void setTextColor(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.ListActivity: void <init>()>   -->    <android.app.Activity: void <init>()>
<android.app.ListActivity: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.service.SheduleApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.service.SheduleApi: void getOfficeAppointments(java.lang.String)>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void sendPost(int,java.lang.String,java.lang.String,java.lang.String)>
<android.app.ProgressDialog: void <init>(android.content.Context)>   -->    <android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<android.app.ProgressDialog: void <init>(android.content.Context)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Dialog: void setCancelable(boolean)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.View: void setVisibility(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ProgressBar: void setVisibility(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.service.ApiHelper: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.service.ApiHelper: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>   -->    <android.os.Handler: void <init>()>
<com.jacksonhewitt.mobile.service.ApiHelper: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>   -->    <com.jacksonhewitt.mobile.utils.DetachableResultReceiver: void <init>(android.os.Handler)>
<com.jacksonhewitt.mobile.service.ApiHelper: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>   -->    <com.jacksonhewitt.mobile.utils.DetachableResultReceiver: void setReceiver(com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<org.json.JSONObject: void <init>()>   -->    <java.lang.Object: void <init>()>
<org.json.JSONObject: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.service.ApiHelper: void sendPost(int,java.lang.String,java.lang.String,java.lang.String)>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void sendRequest(int,java.lang.String,java.lang.String,java.lang.String,int)>
<com.jacksonhewitt.mobile.service.ApiHelper: void sendRequest(int,java.lang.String,java.lang.String,java.lang.String,int)>   -->    <android.content.Intent: void <clinit>()>
<com.jacksonhewitt.mobile.service.SheduleApi: void getOfficeWorkingDays(java.lang.String)>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void sendPost(int,java.lang.String,java.lang.String,java.lang.String)>
<android.util.MonthDisplayHelper: int getMonth()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.util.MonthDisplayHelper: int getYear()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String concat(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String toUpperCase()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void hideCheckMarks()>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void hideCheckMarks()>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void hideCheckMarks()>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void hideCheckMarks()>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void hideCheckMarks()>   -->    <android.view.View: void setVisibility(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void hideCheckMarks()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void hideCheckMarks()>   -->    <com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForNoMarried(boolean,boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.content.res.Resources: int getColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<com.jacksonhewitt.mobile.ui.estimator.EstimateFilingActivity: void configButtonFontForMarried(boolean,boolean,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<android.widget.ToggleButton: void setChecked(boolean)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void setProgressValue(int)>   -->    <android.widget.ProgressBar: int getMax()>
<com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void setProgressValue(int)>   -->    <com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: int setProgress(int,int)>
<com.jacksonhewitt.mobile.ui.widget.SmartSeekBar: void setProgressValue(int)>   -->    <android.widget.ProgressBar: void setProgress(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setTextEstimatedRefound(android.widget.TextView,int,java.lang.String)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setTextEstimatedRefound(android.widget.TextView,int,java.lang.String)>   -->    <android.widget.TextView: void setTextColor(int)>
<android.content.ContextWrapper: android.content.res.Resources getResources()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.res.Resources: int getColor(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <init>(java.lang.String,int,java.lang.String)>   -->    <java.lang.Enum: void <init>(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setFilingStatus(com.jacksonhewitt.mobile.model.estimator.FilingStatus)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setFilingStatus(com.jacksonhewitt.mobile.model.estimator.FilingStatus)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setFilingStatus(com.jacksonhewitt.mobile.model.estimator.FilingStatus)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: java.lang.String toString()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcExemptions()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcIncome()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>   -->    <android.text.TextUtils: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>   -->    <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.math.BigDecimal)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.math.BigDecimal)>   -->    <java.lang.Integer: java.lang.String toString(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: void <init>(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcAdjustments()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcDeductions()>   -->    <com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void <init>(com.jacksonhewitt.mobile.model.estimator.EstimatorState)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcDeductions()>   -->    <com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void <init>(com.jacksonhewitt.mobile.model.estimator.EstimatorState)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void <init>(com.jacksonhewitt.mobile.model.estimator.EstimatorState)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxByIncome(int,com.jacksonhewitt.mobile.model.estimator.FilingStatus)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.lang.Integer: java.lang.String toString(int)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.lang.Integer: java.lang.String toString(int)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.lang.Math: int max(int,int)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.lang.Integer: java.lang.String toString(int)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.lang.Math: int max(int,int)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxByIncome(int,com.jacksonhewitt.mobile.model.estimator.FilingStatus)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxByIncome(int,com.jacksonhewitt.mobile.model.estimator.FilingStatus)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFS(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxByIncome(int,com.jacksonhewitt.mobile.model.estimator.FilingStatus)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxHOH(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxByIncome(int,com.jacksonhewitt.mobile.model.estimator.FilingStatus)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFJorW(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxByIncome(int,com.jacksonhewitt.mobile.model.estimator.FilingStatus)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxS(int)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus[] values()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxHOH(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxHOH(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxHOH(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxHOH(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxHOH(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxHOH(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFJorW(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFJorW(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFJorW(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFJorW(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFJorW(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxMFJorW(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxS(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcCredits()>   -->    <com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void <init>(com.jacksonhewitt.mobile.model.estimator.EstimatorState)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcCredits()>   -->    <com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.lang.Math: int min(int,int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.lang.Math: int min(int,int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.lang.Math: int min(int,int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.lang.Math: int min(int,int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.lang.Math: int min(int,int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.ChildCareChart: java.lang.String getCareCredit(int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.lang.Integer: java.lang.String toString(int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcTotal()>   -->    <com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void <init>(com.jacksonhewitt.mobile.model.estimator.EstimatorState)>
<com.jacksonhewitt.mobile.model.estimator.TaxCalculator: void calcTotal()>   -->    <com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>
<android.view.ContextThemeWrapper: void <init>()>   -->    <android.content.ContextWrapper: void <init>(android.content.Context)>
<android.view.ContextThemeWrapper: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ImageView: void setImageResource(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String toString()>   -->    <java.io.StringWriter: void <init>()>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String toString()>   -->    <java.io.StringWriter: java.lang.String toString()>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String toString()>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String toString()>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String toString()>   -->    <java.lang.Throwable: void printStackTrace()>
<com.jacksonhewitt.mobile.service.ApiHelper: void sendGet(int,java.lang.String,java.lang.String,java.lang.String)>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void sendRequest(int,java.lang.String,java.lang.String,java.lang.String,int)>
<android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String encode(java.lang.String)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String encode(java.lang.String)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String encode(java.lang.String)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String encode(java.lang.String)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String encode(java.lang.String)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.jacksonhewitt.mobile.model.AddressQuery: java.lang.String encode(java.lang.String)>   -->    <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>   -->    <android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void scaleImageToSend()>   -->    <android.graphics.BitmapFactory$Options: void <init>()>
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.graphics.Bitmap$CompressFormat: void <init>(java.lang.String,int)>   -->    <java.lang.Enum: void <init>(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String getLastImagePath()>   -->    <android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistActivity: void setImageFlagByState(android.widget.ImageView,boolean)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistActivity: void setImageFlagByState(android.widget.ImageView,boolean)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistActivity: void setImageFlagByState(android.widget.ImageView,boolean)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistActivity: void setImageFlagByState(android.widget.ImageView,boolean)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <com.jacksonhewitt.mobile.ui.ChecklistActivity: void addFooterHeaderForList()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <android.view.View: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void viewInit()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: boolean getDependentsSSNFlagState()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void addFooterHeaderForList()>   -->    <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void addFooterHeaderForList()>   -->    <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.HashMap: void <init>()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.HashMap: void <init>()>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.List: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.Vector: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.List: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.Vector: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void dataInit()>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<android.widget.ListView: void setCacheColorHint(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ListView: void addHeaderView(android.view.View)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKeysOR(java.util.ArrayList,int,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getIncomeFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>   -->    <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKeysOR(java.util.ArrayList,int,int)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKeysOR(java.util.ArrayList,int,int)>   -->    <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKeysOR(java.util.ArrayList,int,int)>   -->    <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKeysOR(java.util.ArrayList,int,int)>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getDeductionsFlags()>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getDeductionsFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getDeductionsFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getDeductionsFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getDeductionsFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getDeductionsFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getDeductionsFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getDeductionsFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getDeductionsFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getTaxCreditsFlags()>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getTaxCreditsFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getTaxCreditsFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: java.util.ArrayList getTaxCreditsFlags()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>
<com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[],java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>   -->    <android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[])>
<com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[],java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>   -->    <com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: void initGroupsFlag()>
<com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[],java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>   -->    <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[],java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>   -->    <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[],java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>   -->    <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.ChecklistDiscountsActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.utils.Prefs: int getIntProperty(android.content.Context,int)>   -->    <android.content.Context: java.lang.String getString(int)>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View$OnClickListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.AdapterView: void setOnClickListener(android.view.View$OnClickListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.ViewGroup: void addView(android.view.View)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void cleanGaugePanel()>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void cleanGaugePanel()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void cleanGaugePanel()>   -->    <com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void configProgressBar()>
<com.jacksonhewitt.mobile.ui.estimator.RefundEstimatorActivity: void cleanGaugePanel()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void injectResult(android.widget.TextView,android.widget.TextView)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: java.lang.String getLocationZipCity()>   -->    <java.lang.StringBuilder: void <init>()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: java.lang.String getLocationZipCity()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: java.lang.String getLocationZipCity()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: java.lang.String getLocationZipCity()>   -->    <com.jacksonhewitt.mobile.model.Office: java.lang.String getCity()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: java.lang.String getLocationZipCity()>   -->    <com.jacksonhewitt.mobile.model.Office: java.lang.String getState()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: java.lang.String getLocationZipCity()>   -->    <com.jacksonhewitt.mobile.model.Office: java.lang.String getZip()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: java.lang.String getLocationZipCity()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: java.lang.String getLocationZipCity()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: java.lang.String getLocationZipCity()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: java.lang.String getLocationZipCity()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void setPhoneStringFormat(android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.model.Office: java.lang.String getPhone()>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void setPhoneStringFormat(android.widget.TextView)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void setOnClickListener(android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity$1: void <init>(com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity,android.widget.TextView)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void setOnClickListener(android.widget.TextView)>   -->    <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.jacksonhewitt.mobile.ui.locator.OfficeInfoActivity: void setOnClickListener(android.widget.TextView)>   -->    <android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View$OnClickListener)>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void fillWidgetsFromPreferences(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>   -->    <com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void setZipcodeText(int,android.widget.TextView)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void setZipcodeText(int,android.widget.TextView)>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void setZipcodeText(int,android.widget.TextView)>   -->    <java.lang.String: java.lang.String valueOf(int)>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.flurry.android.u: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.flurry.android.u: void <init>()>   -->    <java.util.HashMap: void <init>()>
<com.flurry.android.u: void <init>()>   -->    <java.util.HashMap: void <init>()>
<com.flurry.android.u: void <init>()>   -->    <java.util.HashMap: void <init>()>
<com.flurry.android.u: void <init>()>   -->    <java.util.ArrayList: void <init>()>
<com.flurry.android.u: void <init>()>   -->    <com.flurry.android.z: void <init>()>
<android.os.HandlerThread: void <init>(java.lang.String)>   -->    <java.lang.Thread: void <init>()>
<android.os.HandlerThread: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Thread: void start()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.HandlerThread: void run()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.HandlerThread: android.os.Looper getLooper()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.Handler: void <init>(android.os.Looper)>   -->    <java.lang.Object: void <init>()>
<android.os.Handler: void <init>(android.os.Looper)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>()>   -->    <java.lang.Exception: void <init>()>
<java.lang.RuntimeException: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: int hashCode()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.flurry.android.FlurryAgent$FlurryDefaultExceptionHandler: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.content.ContextWrapper: java.lang.String getPackageName()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <com.flurry.android.ag: void <init>(android.os.Handler,int)>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.Map: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.WeakHashMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.Hashtable: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.TreeMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.HashMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.LinkedHashMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.Map: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.WeakHashMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.Hashtable: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.TreeMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.HashMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.LinkedHashMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.Map: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.WeakHashMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.Hashtable: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.TreeMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.HashMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.LinkedHashMap: void clear()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <com.flurry.android.z: void a(android.content.Context,com.flurry.android.u,com.flurry.android.a)>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.lang.StringBuilder: void <init>()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <android.content.Intent: void <init>(java.lang.String)>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <android.content.Intent: android.content.Intent setData(android.net.Uri)>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.List: int size()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.Vector: int size()>
<com.flurry.android.u: void a(android.content.Context,com.flurry.android.a)>   -->    <java.util.ArrayList: int size()>
<com.flurry.android.u: void a(long,long)>   -->    <java.util.List: void clear()>
<com.flurry.android.u: void a(long,long)>   -->    <java.util.Vector: void clear()>
<com.flurry.android.u: void a(long,long)>   -->    <java.util.ArrayList: void clear()>
<com.flurry.android.a: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.flurry.android.d: void <init>(com.flurry.android.FlurryAgent,android.content.Context,boolean)>   -->    <java.lang.Object: void <init>()>
<com.flurry.android.FlurryAgent: void a(java.lang.Runnable)>   -->    <android.os.Handler: boolean post(java.lang.Runnable)>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.flurry.android.FlurryAgent: void m()>   -->    <android.location.LocationManager: void removeUpdates(android.location.LocationListener)>
<com.flurry.android.b: void <init>(com.flurry.android.FlurryAgent,boolean,android.content.Context)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.io.response.ResponseHandler: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.io.executor.HttpExecutor: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void hideKeyboard()>   -->    <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void hideKeyboard()>   -->    <android.app.Activity: android.view.View getCurrentFocus()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void hideKeyboard()>   -->    <android.view.View: android.os.IBinder getWindowToken()>
<com.jacksonhewitt.mobile.ui.locator.OfficeListActivity: void hideKeyboard()>   -->    <android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>
<com.jacksonhewitt.mobile.ui.adapter.OfficeListAdapter: void <init>(android.content.Context,java.util.List)>   -->    <android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>
<com.jacksonhewitt.mobile.model.AddressQuery: void <init>(java.lang.String,java.lang.String,java.lang.String)>   -->    <java.lang.Object: void <init>()>
<java.lang.String: char[] toCharArray()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.AddressQueryBuilder$TypeSearch: void <init>(java.lang.String,int)>   -->    <java.lang.Enum: void <init>(java.lang.String,int)>
<java.lang.String: boolean matches(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String buildPath()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String buildPath()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String buildPath()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.String buildPath()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.lang.String: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.Boolean checkForCameraHardware(android.content.Context)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void onHomeClick(android.view.View)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <java.lang.Boolean: boolean booleanValue()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <java.io.File: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <android.content.Intent: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startCameraActivity()>   -->    <android.widget.Toast: void show()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.Boolean checkForCameraHardware(android.content.Context)>   -->    <java.lang.Boolean: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.Boolean checkForCameraHardware(android.content.Context)>   -->    <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.Boolean checkForCameraHardware(android.content.Context)>   -->    <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.Boolean checkForCameraHardware(android.content.Context)>   -->    <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: void <clinit>()>   -->    <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: void <clinit>()>   -->    <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: void <clinit>()>   -->    <java.lang.Boolean: void <clinit>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <org.json.JSONObject: void <init>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <org.json.JSONObject: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <org.json.JSONObject: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <android.content.Context: java.lang.String getString(int)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <android.app.Dialog: void show()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <android.app.DatePickerDialog: void show()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <com.jacksonhewitt.mobile.service.ShareDocApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <com.jacksonhewitt.mobile.service.ShareDocApi: void uploadDocument(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void startUploadProcess()>   -->    <java.lang.Throwable: void printStackTrace()>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>   -->    <java.lang.Object: void <init>()>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.flurry.android.g: void <init>()>   -->    <com.flurry.android.g: void <init>(byte)>
<com.flurry.android.i: void <init>(java.lang.String,java.util.Map,long,boolean)>   -->    <java.lang.Object: void <init>()>
<com.flurry.android.i: byte[] a()>   -->    <java.io.ByteArrayOutputStream: void <init>()>
<com.flurry.android.i: byte[] a()>   -->    <java.io.ByteArrayOutputStream: byte[] toByteArray()>
<com.flurry.android.i: byte[] a()>   -->    <java.io.DataOutputStream: void <init>(java.io.OutputStream)>
<com.flurry.android.i: byte[] a()>   -->    <java.io.DataOutputStream: void writeUTF(java.lang.String)>
<com.flurry.android.i: byte[] a()>   -->    <java.io.DataOutputStream: void writeShort(int)>
<com.flurry.android.i: byte[] a()>   -->    <java.io.DataOutputStream: void writeLong(long)>
<com.flurry.android.i: byte[] a()>   -->    <java.io.DataOutputStream: void writeLong(long)>
<com.flurry.android.i: byte[] a()>   -->    <java.io.DataOutputStream: void flush()>
<com.flurry.android.i: byte[] a()>   -->    <java.io.DataOutputStream: void writeShort(int)>
<com.flurry.android.i: byte[] a()>   -->    <java.io.DataOutputStream: void writeUTF(java.lang.String)>
<com.flurry.android.i: byte[] a()>   -->    <java.io.DataOutputStream: void writeUTF(java.lang.String)>
<com.flurry.android.i: byte[] a()>   -->    <java.util.Map: int size()>
<com.flurry.android.i: byte[] a()>   -->    <java.util.WeakHashMap: int size()>
<com.flurry.android.i: byte[] a()>   -->    <java.util.Hashtable: int size()>
<com.flurry.android.i: byte[] a()>   -->    <java.util.TreeMap: int size()>
<com.flurry.android.i: byte[] a()>   -->    <java.util.HashMap: int size()>
<com.flurry.android.i: byte[] a()>   -->    <java.util.Map: java.util.Set entrySet()>
<com.flurry.android.i: byte[] a()>   -->    <java.util.WeakHashMap: java.util.Set entrySet()>
<com.flurry.android.i: byte[] a()>   -->    <java.util.Hashtable: java.util.Set entrySet()>
<com.flurry.android.i: byte[] a()>   -->    <java.util.TreeMap: java.util.Set entrySet()>
<com.flurry.android.i: byte[] a()>   -->    <java.util.HashMap: java.util.Set entrySet()>
<com.flurry.android.i: byte[] a()>   -->    <android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>
<com.flurry.android.i: byte[] a()>   -->    <java.util.Iterator: java.lang.Object next()>
<com.flurry.android.i: byte[] a()>   -->    <android.text.TextUtils$SimpleStringSplitter: java.lang.Object next()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <java.io.PrintStream: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <java.io.FileInputStream: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <java.io.FileOutputStream: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <java.io.FilterOutputStream: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <java.io.ByteArrayOutputStream: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <java.io.PrintWriter: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <java.io.StringWriter: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <java.io.BufferedReader: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <java.io.InputStreamReader: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <java.io.StringReader: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <android.os.ParcelFileDescriptor$AutoCloseInputStream: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <android.os.ParcelFileDescriptor$AutoCloseOutputStream: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <android.content.res.AssetManager$AssetInputStream: void close()>
<com.flurry.android.r: void a(java.io.Closeable)>   -->    <java.io.FilterInputStream: void close()>
<android.content.ContextWrapper: void <init>(android.content.Context)>   -->    <android.content.Context: void <init>()>
<android.content.ContextWrapper: void <init>(android.content.Context)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>   -->    <java.lang.Object: void <init>()>
<org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.client.methods.HttpRequestBase: void <init>()>   -->    <org.apache.http.message.AbstractHttpMessage: void <init>()>
<org.apache.http.client.methods.HttpRequestBase: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()>   -->    <org.apache.http.client.methods.HttpRequestBase: void <init>()>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.entity.AbstractHttpEntity: void <init>()>   -->    <java.lang.Object: void <init>()>
<org.apache.http.entity.AbstractHttpEntity: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.RouteStep: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.RouteStep: void <init>()>   -->    <java.util.ArrayList: void <init>()>
<com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.model.RouteStep: java.lang.String toString()>   -->    <java.util.ArrayList: int size()>
<com.jacksonhewitt.mobile.model.RouteStep$1: void <init>()>   -->    <java.lang.Object: void <init>()>
<java.lang.String: char charAt(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.ReturnProduct: void <init>()>   -->    <java.lang.Object: void <init>()>
<org.json.JSONObject: double getDouble(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.ReturnProduct$1: void <init>()>   -->    <java.lang.Object: void <init>()>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>   -->    <java.lang.Object: void <init>()>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.io.executor.TrustAllSSLSocketFactory$1: void <init>(com.jacksonhewitt.mobile.io.executor.TrustAllSSLSocketFactory)>   -->    <java.lang.Object: void <init>()>
<org.apache.http.params.AbstractHttpParams: void <init>()>   -->    <java.lang.Object: void <init>()>
<org.apache.http.params.AbstractHttpParams: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.util.Calendar: void setTimeZone(java.util.TimeZone)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.util.Calendar: void setTimeInMillis(long)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.util.Calendar: int get(int)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.util.Calendar: void set(int,int)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.util.Calendar: int get(int)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.util.Calendar: void set(int,int)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.util.Calendar: int get(int)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.util.Calendar: int get(int)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.util.Calendar: int get(int)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.lang.String: java.lang.String concat(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.lang.String: java.lang.String concat(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.lang.String: java.lang.String concat(java.lang.String)>
<com.jacksonhewitt.mobile.model.AppointmentTimeInterval: java.lang.String getTimeStr(long)>   -->    <java.lang.String: java.lang.String concat(java.lang.String)>
<android.widget.BaseAdapter: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.widget.BaseAdapter: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.utils.DetachableResultReceiver: void <init>(android.os.Handler)>   -->    <android.os.ResultReceiver: void <init>(android.os.Handler)>
<com.jacksonhewitt.mobile.service.ApiHelper: void sendRequest(int,java.lang.String,java.lang.String,java.lang.String,int)>   -->    <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.jacksonhewitt.mobile.service.ApiHelper: void sendRequest(int,java.lang.String,java.lang.String,java.lang.String,int)>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.service.ApiHelper: void sendRequest(int,java.lang.String,java.lang.String,java.lang.String,int)>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.service.ApiHelper: void sendRequest(int,java.lang.String,java.lang.String,java.lang.String,int)>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.service.ApiHelper: void sendRequest(int,java.lang.String,java.lang.String,java.lang.String,int)>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.service.ApiHelper: void sendRequest(int,java.lang.String,java.lang.String,java.lang.String,int)>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.jacksonhewitt.mobile.service.ApiHelper: void sendRequest(int,java.lang.String,java.lang.String,java.lang.String,int)>   -->    <android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<com.jacksonhewitt.mobile.service.ApiHelper: void sendRequest(int,java.lang.String,java.lang.String,java.lang.String,int)>   -->    <android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
<android.widget.ProgressBar: int getMax()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>   -->    <java.math.BigDecimal: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.math.BigDecimal)>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.math.BigDecimal)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void <init>(com.jacksonhewitt.mobile.model.estimator.EstimatorState)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.FilingStatus getFilingStatus()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int getN25(com.jacksonhewitt.mobile.model.estimator.FilingStatus)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.FilingStatus getFilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.FilingStatus getFilingStatus()>   -->    <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.FilingStatus getFilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int getN25(com.jacksonhewitt.mobile.model.estimator.FilingStatus)>   -->    <com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus[] values()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int getTaxByIncome(int,com.jacksonhewitt.mobile.model.estimator.FilingStatus)>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TaxChart: int formula(int,int,java.lang.String,java.lang.String)>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void <init>(com.jacksonhewitt.mobile.model.estimator.EstimatorState)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: int getN36(int,int,int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: void calculate()>   -->    <java.math.BigDecimal: int intValue()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: int getN36(int,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: int getN36(int,int,int)>   -->    <java.lang.Math: int min(int,int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: int getN36(int,int,int)>   -->    <java.lang.Math: int min(int,int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: int getN36(int,int,int)>   -->    <java.lang.Math: int min(int,int)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: int getN36(int,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus 'from'(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: int getN36(int,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: int getN36(int,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: int getN36(int,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: int getN36(int,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.CreditsCalculator: int getN36(int,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void <init>(com.jacksonhewitt.mobile.model.estimator.EstimatorState)>   -->    <java.lang.Object: void <init>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.math.BigDecimal getDecimalValue(int)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: void setValue(int,java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN38()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>   -->    <com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: void calculate()>   -->    <java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN38()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN38()>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getEic(com.jacksonhewitt.mobile.model.estimator.FilingStatus,int,int)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN38()>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getEic(com.jacksonhewitt.mobile.model.estimator.FilingStatus,int,int)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN38()>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getEic(com.jacksonhewitt.mobile.model.estimator.FilingStatus,int,int)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN38()>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getEic(com.jacksonhewitt.mobile.model.estimator.FilingStatus,int,int)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN38()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN38()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN38()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.lang.Math: int min(int,int)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.lang.Integer: int parseInt(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.lang.Integer: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.TotalsCalculator: java.math.BigDecimal getN37()>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getEic(com.jacksonhewitt.mobile.model.estimator.FilingStatus,int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getEic(com.jacksonhewitt.mobile.model.estimator.FilingStatus,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getEic(com.jacksonhewitt.mobile.model.estimator.FilingStatus,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getEic(com.jacksonhewitt.mobile.model.estimator.FilingStatus,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getEic(com.jacksonhewitt.mobile.model.estimator.FilingStatus,int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func1(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func1(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func1(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func1(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getMfj(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func1(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func1(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func1(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func1(java.lang.String,int)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal getNotMarried(int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: com.jacksonhewitt.mobile.model.estimator.FilingStatus[] values()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func2(int,java.lang.String,int,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func1(java.lang.String,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func1(java.lang.String,int)>   -->    <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<com.jacksonhewitt.mobile.model.estimator.EicChart: java.math.BigDecimal func1(java.lang.String,int)>   -->    <java.math.BigDecimal: void <clinit>()>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>   -->    <java.lang.Object: void <init>()>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.graphics.BitmapFactory$Options: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.graphics.BitmapFactory$Options: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void setImageFlagByState(android.widget.ImageView,boolean)>   -->    <android.widget.ImageView: void setImageResource(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void setImageFlagByState(android.widget.ImageView,boolean)>   -->    <android.widget.ImageView: void setImageResource(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void addFooterHeaderForList()>   -->    <android.app.Activity: android.view.View findViewById(int)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void addFooterHeaderForList()>   -->    <android.widget.ListView: void addFooterView(android.view.View)>
<com.jacksonhewitt.mobile.ui.ChecklistActivity: void addFooterHeaderForList()>   -->    <android.widget.ListView: void addHeaderView(android.view.View)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: boolean getDependentsSSNFlagState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: boolean getDependentsSSNFlagState()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: boolean getDependentsSSNFlagState()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: int getDataForField(java.lang.String)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: boolean getDependentsSSNFlagState()>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: int getDataForField(java.lang.String)>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: int getDataForField(java.lang.String)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKey(java.util.ArrayList,int)>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKeysOR(java.util.ArrayList,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKeysOR(java.util.ArrayList,int,int)>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKeysOR(java.util.ArrayList,int,int)>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: int getDataForField(java.lang.String)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKeysOR(java.util.ArrayList,int,int)>   -->    <com.jacksonhewitt.mobile.utils.ChecklistHelper: int getDataForField(java.lang.String)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKeysOR(java.util.ArrayList,int,int)>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<com.jacksonhewitt.mobile.utils.ChecklistHelper: void putNewIncomeFlagByKeysOR(java.util.ArrayList,int,int)>   -->    <java.util.ArrayList: boolean add(java.lang.Object)>
<java.lang.Integer: java.lang.Integer valueOf(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[])>   -->    <android.widget.BaseExpandableListAdapter: void <init>()>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[])>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: void initGroupsFlag()>   -->    <com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: boolean isCheckFlag(java.util.ArrayList)>
<com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: void initGroupsFlag()>   -->    <com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: boolean isCheckFlag(java.util.ArrayList)>
<com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: void initGroupsFlag()>   -->    <com.jacksonhewitt.mobile.ui.adapter.ChecklistExpandableListAdapter: boolean isCheckFlag(java.util.ArrayList)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void setZipcodeText(int,android.widget.TextView)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.jacksonhewitt.mobile.ui.DiscountsInfoActivity: void setZipcodeText(int,android.widget.TextView)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.flurry.android.z: void <init>()>   -->    <java.lang.Object: void <init>()>
<com.flurry.android.z: void <init>()>   -->    <com.flurry.android.af: void <init>(int)>
<com.flurry.android.z: void <init>()>   -->    <com.flurry.android.af: void <init>(int)>
<com.flurry.android.z: void <init>()>   -->    <java.util.HashMap: void <init>()>
<com.flurry.android.z: void <init>()>   -->    <java.util.HashMap: void <init>()>
<com.flurry.android.z: void <init>()>   -->    <java.util.HashMap: void <init>()>
<com.flurry.android.z: void <init>()>   -->    <java.util.HashMap: void <init>()>
<com.flurry.android.af: void <init>(int)>   -->    <java.lang.Math: double ceil(double)>
<java.lang.Thread: void <init>()>   -->    <java.lang.Object: void <init>()>
<java.lang.Thread: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.flurry.android.ag: void <init>(android.os.Handler,int)>   -->    <java.lang.Object: void <init>()>
<com.flurry.android.ag: void <init>(android.os.Handler,int)>   -->    <com.flurry.android.ag: void b()>
<com.flurry.android.ag: void <init>(android.os.Handler,int)>   -->    <java.util.ArrayList: void <init>()>
<com.flurry.android.ag: void <init>(android.os.Handler,int)>   -->    <android.os.Handler: void <init>()>
<com.flurry.android.ag: void <init>(android.os.Handler,int)>   -->    <com.flurry.android.k: void <init>(com.flurry.android.ag)>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: void <init>(java.lang.String)>   -->    <java.lang.Object: void <init>()>
<android.content.Intent: void <init>(java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: android.content.Intent setData(android.net.Uri)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: android.view.View getCurrentFocus()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>   -->    <android.widget.BaseAdapter: void <init>()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.text.SimpleDateFormat: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.text.DateFormat: java.lang.String format(java.util.Date)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: void getPictureName()>   -->    <java.util.Date: void <init>()>
<com.jacksonhewitt.mobile.ui.sharedocument.CaptureUploadImage: java.lang.Boolean checkForCameraHardware(android.content.Context)>   -->    <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<java.lang.Boolean: boolean booleanValue()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.service.ShareDocApi: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void <init>(android.content.Context,com.jacksonhewitt.mobile.utils.DetachableResultReceiver$Receiver)>
<com.jacksonhewitt.mobile.service.ShareDocApi: void uploadDocument(java.lang.String)>   -->    <com.jacksonhewitt.mobile.service.ApiHelper: void sendPost(int,java.lang.String,java.lang.String,java.lang.String)>
<com.flurry.android.g: void <init>(byte)>   -->    <java.lang.Object: void <init>()>
<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.text.TextUtils$SimpleStringSplitter: java.lang.Object next()>   -->    <android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>
<android.os.ParcelFileDescriptor$AutoCloseInputStream: void close()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void close()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.res.AssetManager$AssetInputStream: void close()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Context: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.content.Context: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.apache.http.message.AbstractHttpMessage: void <init>()>   -->    <java.lang.Object: void <init>()>
<org.apache.http.message.AbstractHttpMessage: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.os.ResultReceiver: void <init>(android.os.Handler)>   -->    <java.lang.Object: void <init>()>
<android.os.ResultReceiver: void <init>(android.os.Handler)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.FilingStatus getFilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.EstimatorState: java.lang.String getValue(int)>
<com.jacksonhewitt.mobile.model.estimator.EstimatorState: com.jacksonhewitt.mobile.model.estimator.FilingStatus getFilingStatus()>   -->    <com.jacksonhewitt.mobile.model.estimator.FilingStatus: java.lang.String toString()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int getN25(com.jacksonhewitt.mobile.model.estimator.FilingStatus)>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <java.lang.Enum: int ordinal()>
<com.jacksonhewitt.mobile.model.estimator.DeductionsCalculator: int[] $SWITCH_TABLE$com$jacksonhewitt$mobile$model$estimator$FilingStatus()>   -->    <