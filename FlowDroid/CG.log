CG==================
<dummyMainClass: void dummyMainMethod()>   -->    <android.app.Activity: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <clinit>()>
<android.app.Activity: void <clinit>()>   -->    <android.app.Activity: void <clinit>()>
<android.os.Bundle: void <clinit>()>   -->    <android.os.Bundle: void <clinit>()>
<android.os.Bundle: void <clinit>()>   -->    <android.os.Bundle: void <clinit>()>
<dummyMainClass: void dummyMainMethod()>   -->    <ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void <init>()>
<dummyMainClass: void dummyMainMethod()>   -->    <ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>   -->    <ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<dummyMainClass: void dummyMainMethod()>   -->    <ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<dummyMainClass: void dummyMainMethod()>   -->    <ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<dummyMainClass: void dummyMainMethod()>   -->    <android.os.Bundle: void <init>()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.System: void <clinit>()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.Long: java.lang.Long valueOf(long)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.System: long currentTimeMillis()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.System: long currentTimeMillis()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.os.SystemClock: long elapsedRealtime()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.System: long currentTimeMillis()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.Long: void <clinit>()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.String: void <clinit>()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.System: void <clinit>()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.System: void <clinit>()>
<java.lang.Long: void <clinit>()>   -->    <java.lang.Long: void <clinit>()>
<java.lang.String: void <clinit>()>   -->    <java.lang.String: void <clinit>()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void <init>()>   -->    <android.app.Activity: void <init>()>
<android.app.Activity: void <init>()>   -->    <android.app.Activity: void finalize()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void onCreate(android.os.Bundle)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: void setContentView(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.app.Activity: android.view.View findViewById(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <java.util.ArrayList: void <init>()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <ru.lopotun.android.laborContractionsCalc.PangsArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCreate(android.os.Bundle)>   -->    <android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: boolean onCreateOptionsMenu(android.view.Menu)>   -->    <android.app.Activity: android.view.MenuInflater getMenuInflater()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: boolean onCreateOptionsMenu(android.view.Menu)>   -->    <android.view.MenuInflater: void inflate(int,android.view.Menu)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.view.View: int getId()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.Chronometer: void setBase(long)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.Chronometer: void start()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.Chronometer: void stop()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <ru.lopotun.android.laborContractionsCalc.Pang: void <init>(long,long,long,long)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.ArrayAdapter: void add(java.lang.Object)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.ArrayAdapter: void notifyDataSetChanged()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.AdapterView: int getCount()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.ListView: void setSelection(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void calcDurationFreq()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.content.Context: java.lang.String getString(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.content.Context: java.lang.String getString(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.StringBuilder: void <init>(java.lang.String)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <java.lang.StringBuilder: java.lang.String toString()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.ToggleButton: void setTextOn(java.lang.CharSequence)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.ToggleButton: void setTextOff(java.lang.CharSequence)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.TextView: void setTextColor(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.TextView: void setText(int)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>   -->    <android.widget.TextView: void setText(java.lang.CharSequence)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void calcDurationFreq()>   -->    <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void calcDurationFreq()>   -->    <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   -->    <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   -->    <ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void ClearAll()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   -->    <ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void calcDurationFreq()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   -->    <android.widget.ArrayAdapter: int getCount()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   -->    <android.widget.ArrayAdapter: void remove(java.lang.Object)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   -->    <android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<android.os.Bundle: void <init>()>   -->    <java.lang.Object: void <init>()>
<android.os.Bundle: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()>   -->    <java.lang.Object: void finalize()>
<java.lang.Long: java.lang.Long valueOf(long)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void <init>()>   -->    <android.view.ContextThemeWrapper: void <init>()>
<android.app.Activity: void <init>()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void finalize()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void onCreate(android.os.Bundle)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: void setContentView(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: android.view.View findViewById(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<ru.lopotun.android.laborContractionsCalc.PangsArrayAdapter: void <init>(android.content.Context,int,java.util.List)>   -->    <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.MenuInflater: void inflate(int,android.view.Menu)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.view.View: int getId()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.Chronometer: void setBase(long)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.Chronometer: void start()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.Chronometer: void stop()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<ru.lopotun.android.laborContractionsCalc.Pang: void <init>(long,long,long,long)>   -->    <java.lang.Object: void <init>()>
<android.widget.ArrayAdapter: void add(java.lang.Object)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ArrayAdapter: void notifyDataSetChanged()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.AdapterView: int getCount()>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<android.widget.ListView: void setSelection(int)>   -->    <java.lang.RuntimeException: void <init>(java.lang.String)>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: void calcDurationFreq()>   -->    <java.util.ArrayList: int size()>
<ru.lopotun.android.laborContractionsCalc.LaborContractionsCalcActivity: voi